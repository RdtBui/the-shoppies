{"ast":null,"code":"import _objectSpread from\"/home/richard/Development/reactjs/beta-shoppies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/richard/Development/reactjs/beta-shoppies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import SearchIcon from'@material-ui/icons/Search';import TextField from'@material-ui/core/TextField';import Autocomplete,{createFilterOptions}from'@material-ui/lab/Autocomplete';import Grid from'@material-ui/core/Grid';import{FilmData}from'./FilmData';import Paper from'@material-ui/core/Paper';import{makeStyles,ThemeProvider}from'@material-ui/core/styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{padding:'2px 4px',display:'flex',alignItems:'center',width:400},input:{marginLeft:theme.spacing(1),flex:1},searchIcon:{padding:10},searchBar:{paddingTop:11,paddingBottom:13,paddingRight:20}};});var filter=createFilterOptions();var SearchBar=function SearchBar(_ref){var onTermSubmit=_ref.onTermSubmit,searchError=_ref.searchError;var classes=useStyles();var _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),value=_React$useState2[0],setValue=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),errorMessage=_React$useState4[0],setErrorMessage=_React$useState4[1];useEffect(function(){if(searchError!==''){setErrorMessage(searchError);}else{setErrorMessage(false);}},[searchError]);var onFormSubmit=function onFormSubmit(event){event.preventDefault();onTermSubmit(value.title);};return/*#__PURE__*/_jsx(Paper,{className:classes.searchBar,children:/*#__PURE__*/_jsx(Autocomplete,{value:value,onChange:function onChange(event,newValue){if(typeof newValue==='string'){setValue({title:newValue});}else if(newValue&&newValue.inputValue){// Create a new value from the user input\nsetValue({title:newValue.inputValue});}else{setValue(newValue);}},filterOptions:function filterOptions(options,params){var filtered=filter(options,params);// Suggest the creation of a new value\nif(params.inputValue!==''){filtered.push({inputValue:params.inputValue,title:\"Add \\\"\".concat(params.inputValue,\"\\\"\")});}return filtered;},selectOnFocus:true,clearOnBlur:true,handleHomeEndKeys:true,id:\"free-solo-with-text-demo\",options:FilmData,getOptionLabel:function getOptionLabel(option){// Value selected with enter, right from the input\nif(typeof option==='string'){return option;}// Add \"xxx\" option created dynamically\nif(option.inputValue){return option.inputValue;}// Regular option\nreturn option.title;},renderOption:function renderOption(option){return option.title;},style:{width:\"100%\"},freeSolo:true,renderInput:function renderInput(params){return/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Grid,{container:true,item:true,xs:2,sm:1,md:1,justify:\"center\",children:/*#__PURE__*/_jsx(SearchIcon,{justifyContent:\"center\",fontSize:\"large\",className:classes.searchIcon})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:10,sm:11,md:11,children:/*#__PURE__*/_jsx(\"form\",{onSubmit:onFormSubmit,children:/*#__PURE__*/_jsx(TextField,_objectSpread({error:errorMessage?true:false,helperText:errorMessage?errorMessage:'',size:\"small\",variant:\"outlined\",label:\"Search a Movie\"// color=\"secondary\"\n,margin:\"dense\"},params))})})]});}})});};export default SearchBar;","map":{"version":3,"sources":["/home/richard/Development/reactjs/beta-shoppies/src/components/SearchBar.js"],"names":["React","useState","useEffect","SearchIcon","TextField","Autocomplete","createFilterOptions","Grid","FilmData","Paper","makeStyles","ThemeProvider","useStyles","theme","root","padding","display","alignItems","width","input","marginLeft","spacing","flex","searchIcon","searchBar","paddingTop","paddingBottom","paddingRight","filter","SearchBar","onTermSubmit","searchError","classes","value","setValue","errorMessage","setErrorMessage","onFormSubmit","event","preventDefault","title","newValue","inputValue","options","params","filtered","push","option"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport Grid from '@material-ui/core/Grid';\nimport { FilmData } from './FilmData';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: 400,\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    searchIcon: {\n        padding: 10,\n    },\n    searchBar: {\n        paddingTop: 11,\n        paddingBottom: 13,\n        paddingRight: 20,\n    },\n}));\n\nconst filter = createFilterOptions();\n\n\nconst SearchBar = ({ onTermSubmit, searchError }) => {\n    const classes = useStyles();\n\n    const [value, setValue] = React.useState(null);\n    const [errorMessage, setErrorMessage] = React.useState(false);\n\n    useEffect(() => {\n        if (searchError !== '') {\n            setErrorMessage(searchError);\n        } else {\n            setErrorMessage(false);\n        }\n    }, [searchError]);\n\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n\n        onTermSubmit(value.title);\n    };\n\n    return (\n        <Paper className={classes.searchBar}>\n            <Autocomplete\n                value={value}\n                onChange={(event, newValue) => {\n                    if (typeof newValue === 'string') {\n                        setValue({\n                            title: newValue,\n                        });\n                    } else if (newValue && newValue.inputValue) {\n                        // Create a new value from the user input\n                        setValue({\n                            title: newValue.inputValue,\n                        });\n                    } else {\n                        setValue(newValue);\n                    }\n                }}\n                filterOptions={(options, params) => {\n                    const filtered = filter(options, params);\n\n                    // Suggest the creation of a new value\n                    if (params.inputValue !== '') {\n                        filtered.push({\n                            inputValue: params.inputValue,\n                            title: `Add \"${params.inputValue}\"`,\n                        });\n                    }\n\n                    return filtered;\n                }}\n                selectOnFocus\n                clearOnBlur\n                handleHomeEndKeys\n                id=\"free-solo-with-text-demo\"\n                options={FilmData}\n                getOptionLabel={(option) => {\n                    // Value selected with enter, right from the input\n                    if (typeof option === 'string') {\n                        return option;\n                    }\n                    // Add \"xxx\" option created dynamically\n                    if (option.inputValue) {\n                        return option.inputValue;\n                    }\n                    // Regular option\n                    return option.title;\n                }}\n                renderOption={(option) => option.title}\n                style={{ width: \"100%\" }}\n                freeSolo\n                renderInput={(params) => (\n                    <Grid container direction=\"row\" alignItems=\"center\">\n                        <Grid container item xs={2} sm={1} md={1} justify=\"center\">\n                            <SearchIcon justifyContent=\"center\" fontSize=\"large\" className={classes.searchIcon} />\n                        </Grid>\n                        <Grid item xs={10} sm={11} md={11}>\n                            <form onSubmit={onFormSubmit}>\n                                <TextField\n                                    error={errorMessage ? true : false}\n                                    helperText={errorMessage ? errorMessage : ''}\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    label=\"Search a Movie\"\n                                    // color=\"secondary\"\n                                    margin=\"dense\"\n                                    {...params}\n                                />\n                            </form>\n                        </Grid>\n                    </Grid>\n                )}\n            />\n        </Paper>\n    );\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}