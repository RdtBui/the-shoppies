{"ast":null,"code":"var _jsxFileName = \"/home/richard/Development/reactjs/beta-shoppies/src/components/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport Grid from '@material-ui/core/Grid';\nimport { FilmData } from './FilmData';\nimport Card from '@material-ui/core/Card';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport ErrorTwoTone from '@material-ui/icons/ErrorTwoTone';\nimport Box from '@material-ui/core/Box';\nimport AlertWarning from './AlertWarning';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  searchBar: {\n    paddingTop: 11,\n    paddingBottom: 13,\n    paddingRight: 20\n  },\n  errorIcon: {\n    marginRight: 5\n  }\n}));\nconst filter = createFilterOptions();\n\nconst SearchBar = ({\n  onTermSubmit,\n  searchError\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(null);\n  const [errorMessage, setErrorMessage] = React.useState(false);\n  const [openAlert, setOpenAlert] = React.useState(false);\n  useEffect(() => {\n    if (searchError !== '') {\n      setErrorMessage(searchError === \"Incorrect IMDb ID.\" ? \"Please enter a movie title\" : searchError);\n    } else {\n      setErrorMessage(false);\n    }\n  }, [searchError]);\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n\n    if (value === null) {\n      onTermSubmit(null);\n    } else {\n      onTermSubmit(value.title);\n    }\n  };\n\n  const errorDisplay = () => {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorTwoTone, {\n        className: classes.errorIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), errorMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenAlert(false);\n  };\n\n  const handleAlert = () => {\n    setOpenAlert(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: classes.searchBar,\n      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n        value: value,\n        onChange: (event, newValue) => {\n          if (typeof newValue === 'string') {\n            setValue({\n              title: newValue\n            });\n          } else if (newValue && newValue.inputValue) {\n            // Create a new value from the user input\n            setValue({\n              title: newValue.inputValue\n            });\n          } else {\n            setValue(newValue);\n          }\n        },\n        filterOptions: (options, params) => {\n          const filtered = filter(options, params); // Suggest the creation of a new value\n\n          if (params.inputValue !== '') {\n            filtered.push({\n              inputValue: params.inputValue,\n              title: `Add \"${params.inputValue}\"`\n            });\n          }\n\n          return filtered;\n        },\n        selectOnFocus: true,\n        clearOnBlur: true,\n        handleHomeEndKeys: true,\n        id: \"free-solo-with-text-demo\",\n        options: FilmData,\n        getOptionLabel: option => {\n          // Value selected with enter, right from the input\n          if (typeof option === 'string') {\n            return option;\n          } // Add \"xxx\" option created dynamically\n\n\n          if (option.inputValue) {\n            return option.inputValue;\n          } // Regular option\n\n\n          return option.title;\n        },\n        renderOption: option => option.title,\n        style: {\n          width: \"100%\"\n        },\n        freeSolo: true,\n        renderInput: params => /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            xs: 2,\n            sm: 1,\n            md: 1,\n            justify: \"center\",\n            children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n              justifyContent: \"center\",\n              className: classes.searchIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 10,\n            sm: 11,\n            md: 11,\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: onFormSubmit,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                error: errorMessage ? true : false,\n                helperText: errorMessage ? errorDisplay() : '',\n                size: \"small\",\n                variant: \"outlined\",\n                label: \"Search a Movie\" // color=\"secondary\"\n                ,\n                margin: \"dense\",\n                ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AlertWarning, {\n        handleOpen: openAlert,\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBar, \"Npk+6MuoWDxmCQVeygOw+CgF5aw=\", false, function () {\n  return [useStyles];\n});\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/home/richard/Development/reactjs/beta-shoppies/src/components/SearchBar.js"],"names":["React","useState","useEffect","SearchIcon","TextField","Autocomplete","createFilterOptions","Grid","FilmData","Card","makeStyles","ThemeProvider","ErrorTwoTone","Box","AlertWarning","useStyles","theme","root","padding","display","alignItems","width","input","marginLeft","spacing","flex","searchBar","paddingTop","paddingBottom","paddingRight","errorIcon","marginRight","filter","SearchBar","onTermSubmit","searchError","classes","value","setValue","errorMessage","setErrorMessage","openAlert","setOpenAlert","onFormSubmit","event","preventDefault","title","errorDisplay","handleClose","reason","handleAlert","newValue","inputValue","options","params","filtered","push","option","searchIcon"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport Grid from '@material-ui/core/Grid';\nimport { FilmData } from './FilmData';\nimport Card from '@material-ui/core/Card';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport ErrorTwoTone from '@material-ui/icons/ErrorTwoTone';\nimport Box from '@material-ui/core/Box';\nimport AlertWarning from './AlertWarning';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: 400,\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    searchBar: {\n        paddingTop: 11,\n        paddingBottom: 13,\n        paddingRight: 20,\n    },\n    errorIcon: {\n        marginRight: 5,\n    }\n}));\n\nconst filter = createFilterOptions();\n\nconst SearchBar = ({ onTermSubmit, searchError }) => {\n    const classes = useStyles();\n\n    const [value, setValue] = React.useState(null);\n    const [errorMessage, setErrorMessage] = React.useState(false);\n    const [openAlert, setOpenAlert] = React.useState(false);\n\n    useEffect(() => {\n        if (searchError !== '') {\n            setErrorMessage(searchError === \"Incorrect IMDb ID.\" ? \"Please enter a movie title\" : searchError);\n        } else {\n            setErrorMessage(false);\n        }\n    }, [searchError]);\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n        if (value === null) {\n            onTermSubmit(null);\n        } else {\n            onTermSubmit(value.title);\n\n        }\n    };\n\n    const errorDisplay = () => {\n        return (\n            <Box display=\"flex\" alignItems=\"center\">\n                <ErrorTwoTone className={classes.errorIcon} />\n                {errorMessage}\n            </Box>\n        );\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpenAlert(false);\n    };\n\n    const handleAlert = () => {\n        setOpenAlert(true);\n    };\n\n    return (\n        <React.Fragment>\n            <Card className={classes.searchBar}>\n                <Autocomplete\n                    value={value}\n                    onChange={(event, newValue) => {\n                        if (typeof newValue === 'string') {\n                            setValue({\n                                title: newValue,\n                            });\n                        } else if (newValue && newValue.inputValue) {\n                            // Create a new value from the user input\n                            setValue({\n                                title: newValue.inputValue,\n                            });\n                        } else {\n                            setValue(newValue);\n                        }\n                    }}\n                    filterOptions={(options, params) => {\n                        const filtered = filter(options, params);\n\n                        // Suggest the creation of a new value\n                        if (params.inputValue !== '') {\n                            filtered.push({\n                                inputValue: params.inputValue,\n                                title: `Add \"${params.inputValue}\"`,\n                            });\n                        }\n                        return filtered;\n                    }}\n                    selectOnFocus\n                    clearOnBlur\n                    handleHomeEndKeys\n                    id=\"free-solo-with-text-demo\"\n                    options={FilmData}\n                    getOptionLabel={(option) => {\n                        // Value selected with enter, right from the input\n                        if (typeof option === 'string') {\n                            return option;\n                        }\n                        // Add \"xxx\" option created dynamically\n                        if (option.inputValue) {\n                            return option.inputValue;\n                        }\n                        // Regular option\n                        return option.title;\n                    }}\n                    renderOption={(option) => option.title}\n                    style={{ width: \"100%\" }}\n                    freeSolo\n                    renderInput={(params) => (\n                        <Grid container direction=\"row\" alignItems=\"center\">\n                            <Grid container item xs={2} sm={1} md={1} justify=\"center\">\n                                <SearchIcon justifyContent=\"center\" className={classes.searchIcon} />\n                            </Grid>\n                            <Grid item xs={10} sm={11} md={11}>\n                                <form onSubmit={onFormSubmit}>\n                                    <TextField\n                                        error={errorMessage ? true : false}\n                                        helperText={errorMessage ? errorDisplay() : ''}\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        label=\"Search a Movie\"\n                                        // color=\"secondary\"\n                                        margin=\"dense\"\n                                        {...params}\n                                    />\n                                </form>\n                            </Grid>\n                        </Grid>\n                    )}\n                />\n            </Card>\n            <div>\n                <AlertWarning handleOpen={openAlert} handleClose={handleClose} />\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}