{"ast":null,"code":"var _jsxFileName = \"/home/richard/Development/reactjs/beta-shoppies/src/components/MovieItem.js\",\n    _s = $RefreshSig$();\n\nimport './MovieItem.css';\nimport React, { useState, useEffect } from 'react';\nimport NA from '../assets/funny.jpg';\nimport omdb from '../api/omdb';\nimport Button from '@material-ui/core/Button';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport MovieDetails from './MovieDetails'; // import NominationAlertDialog from './NominationAlertDialog';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  secondaryHeading: {\n    color: theme.palette.text.secondary\n  },\n  nominateButtonMargin: {\n    margin: '15px 0px'\n  },\n  button: {\n    textTransform: \"none\",\n    borderRadius: \"18px\",\n    padding: \"7px 20px\"\n  },\n  infoIcon: {\n    color: \"orange\",\n    marginRight: \"10px\"\n  }\n}));\n\nconst MovieItem = ({\n  movie,\n  onNominate,\n  nominations,\n  panelIndex,\n  expanded,\n  handleChange,\n  handleAlert\n}) => {\n  _s();\n\n  const movieId = movie.imdbID;\n  const [title, setTitle] = useState('');\n  const [runtime, setRuntime] = useState('');\n  const [releasedYear, setReleasedYear] = useState('');\n  const [country, setCountry] = useState('');\n  const [rated, setRated] = useState('');\n  const [isDisable, setIsDisable] = useState(false); // const [openDialog, setOpenDialog] = useState(false);\n\n  const classes = useStyles();\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await omdb.get('', {\n        params: {\n          i: movieId,\n          plot: \"full\"\n        }\n      });\n      const results = response.data;\n      setTitle(results.Title);\n      setRuntime(results.Runtime);\n      setReleasedYear(results.Year);\n      setCountry(results.Country);\n      setRated(results.Rated);\n    };\n\n    fetchData();\n  }, [movieId]); // Disable and enable button according to nomination\n\n  useEffect(() => {\n    if (nominations.includes(movie)) {\n      setIsDisable(true);\n    } else {\n      setIsDisable(false);\n    }\n  }, [nominations, movie]); // const handleCloseDialog = () => {\n  //     setOpenDialog(false);\n  // };\n  // Extract more detailed information of the movie when more info is needed\n\n  const onNominateMovie = nominatedMovie => {\n    // Verifies if the nomination has already been nominated\n    console.log(nominations);\n\n    if (nominations.length === 4) {\n      // setOpenDialog(true);\n      // Nominations should be full after this call\n      onNominate(nominatedMovie);\n    } else if (nominations.length < 5) {\n      setIsDisable(true); // Nominations not full, then don't disable button\n\n      onNominate(nominatedMovie);\n    } else if (nominations.length === 5) {\n      // Displays Alert when try to add new movie when nominations list is full\n      handleAlert();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Accordion, {\n      expanded: expanded === `panel${panelIndex}`,\n      onChange: handleChange(`panel${panelIndex}`),\n      children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n        expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 33\n        }, this),\n        \"aria-controls\": `panel${panelIndex}bh-content`,\n        id: `panel${panelIndex}bh-header`,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: \"3\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"movie-poster\",\n              alt: movie.Title,\n              src: movie.Poster === \"N/A\" ? NA : movie.Poster\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            alignItems: \"flex-start\",\n            sm: \"9\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.secondaryHeading,\n                children: [rated === \"N/A\" ? \"\" : `${rated}  |  `, runtime, \"  |  \", releasedYear, \" (\", country, \") \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Box // Prevents the nominate button from opening the detail sheet\n              , {\n                onClick: event => event.stopPropagation(),\n                onFocus: event => event.stopPropagation(),\n                flexDirection: \"column\",\n                display: \"flex\",\n                alignItems: \"center\",\n                className: classes.nominateButtonMargin,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    cursor: 'not-allowed'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: classes.button,\n                    endIcon: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 134,\n                      columnNumber: 54\n                    }, this),\n                    disabled: isDisable,\n                    size: \"small\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: () => onNominateMovie(movie),\n                    children: \"Nominate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        variant: \"middle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n        children: /*#__PURE__*/_jsxDEV(MovieDetails, {\n          movieId: movieId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieItem, \"ryF1geSa3yzVcNngLum866yuwPk=\", false, function () {\n  return [useStyles];\n});\n\n_c = MovieItem;\nexport default MovieItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieItem\");","map":{"version":3,"sources":["/home/richard/Development/reactjs/beta-shoppies/src/components/MovieItem.js"],"names":["React","useState","useEffect","NA","omdb","Button","AddCircleOutlineIcon","makeStyles","Accordion","AccordionDetails","AccordionSummary","Typography","ExpandMoreIcon","Divider","Grid","Box","MovieDetails","useStyles","theme","secondaryHeading","color","palette","text","secondary","nominateButtonMargin","margin","button","textTransform","borderRadius","padding","infoIcon","marginRight","MovieItem","movie","onNominate","nominations","panelIndex","expanded","handleChange","handleAlert","movieId","imdbID","title","setTitle","runtime","setRuntime","releasedYear","setReleasedYear","country","setCountry","rated","setRated","isDisable","setIsDisable","classes","fetchData","response","get","params","i","plot","results","data","Title","Runtime","Year","Country","Rated","includes","onNominateMovie","nominatedMovie","console","log","length","Poster","event","stopPropagation","cursor"],"mappings":"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","sourcesContent":["import './MovieItem.css';\nimport React, { useState, useEffect } from 'react';\nimport NA from '../assets/funny.jpg';\nimport omdb from '../api/omdb';\nimport Button from '@material-ui/core/Button';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport MovieDetails from './MovieDetails'\n// import NominationAlertDialog from './NominationAlertDialog';\n\nconst useStyles = makeStyles((theme) => ({\n    secondaryHeading: {\n        color: theme.palette.text.secondary\n    },\n    nominateButtonMargin: {\n        margin: '15px 0px',\n    },\n    button: {\n        textTransform: \"none\",\n        borderRadius: \"18px\",\n        padding: \"7px 20px\",\n    },\n    infoIcon: {\n        color: \"orange\",\n        marginRight: \"10px\",\n    },\n}));\n\nconst MovieItem = ({ movie, onNominate, nominations, panelIndex, expanded, handleChange, handleAlert }) => {\n\n    const movieId = movie.imdbID;\n    const [title, setTitle] = useState('');\n    const [runtime, setRuntime] = useState('');\n    const [releasedYear, setReleasedYear] = useState('');\n    const [country, setCountry] = useState('');\n    const [rated, setRated] = useState('');\n    const [isDisable, setIsDisable] = useState(false);\n    // const [openDialog, setOpenDialog] = useState(false);\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const response = await omdb.get(\n                '',\n                {\n                    params: {\n                        i: movieId,\n                        plot: \"full\"\n                    }\n                }\n            );\n\n            const results = response.data;\n            setTitle(results.Title);\n            setRuntime(results.Runtime);\n            setReleasedYear(results.Year);\n            setCountry(results.Country);\n            setRated(results.Rated);\n        };\n        fetchData();\n    }, [movieId]);\n\n    // Disable and enable button according to nomination\n    useEffect(() => {\n        if (nominations.includes(movie)) {\n            setIsDisable(true);\n        } else {\n            setIsDisable(false);\n        }\n    }, [nominations, movie]);\n\n    // const handleCloseDialog = () => {\n    //     setOpenDialog(false);\n    // };\n\n    // Extract more detailed information of the movie when more info is needed\n    const onNominateMovie = (nominatedMovie) => {\n        // Verifies if the nomination has already been nominated\n        console.log(nominations);\n        if (nominations.length === 4) {\n            // setOpenDialog(true);\n            // Nominations should be full after this call\n            onNominate(nominatedMovie);\n        } else if (nominations.length < 5) {\n            setIsDisable(true);\n            // Nominations not full, then don't disable button\n            onNominate(nominatedMovie);\n        } else if (nominations.length === 5) {\n            // Displays Alert when try to add new movie when nominations list is full\n            handleAlert();\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <Accordion expanded={expanded === `panel${panelIndex}`} onChange={handleChange(`panel${panelIndex}`)}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls={`panel${panelIndex}bh-content`}\n                    id={`panel${panelIndex}bh-header`}\n                >\n                    <Grid container direction=\"row\">\n                        <Grid item sm=\"3\">\n                            <img id=\"movie-poster\" alt={movie.Title} src={movie.Poster === \"N/A\" ? NA : movie.Poster} />\n                        </Grid>\n\n                        <Grid alignItems=\"flex-start\" sm=\"9\">\n                            <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n                                <Typography variant=\"h5\">{title}</Typography>\n                                <Typography className={classes.secondaryHeading}>{rated === \"N/A\" ? \"\" : (`${rated}  |  `)}{runtime}  |  {releasedYear} ({country}) </Typography>\n\n                                <Box\n                                    // Prevents the nominate button from opening the detail sheet\n                                    onClick={(event) => event.stopPropagation()}\n                                    onFocus={(event) => event.stopPropagation()}\n                                    flexDirection=\"column\"\n                                    display=\"flex\"\n                                    alignItems=\"center\"\n                                    className={classes.nominateButtonMargin}\n                                >\n                                    <span style={{ cursor: 'not-allowed' }}>\n                                        <Button\n                                            className={classes.button}\n                                            endIcon={<AddCircleOutlineIcon />}\n                                            disabled={isDisable}\n                                            size=\"small\"\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={() => onNominateMovie(movie)}>\n                                            Nominate\n                                    </Button>\n                                    </span>\n                                </Box>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </AccordionSummary>\n                <Divider variant=\"middle\" />\n                <AccordionDetails>\n                    <MovieDetails movieId={movieId} />\n                </AccordionDetails>\n            </Accordion>\n            {/* <NominationAlertDialog openDialog={openDialog} handleCloseDialog={handleCloseDialog} /> */}\n        </React.Fragment>\n    );\n};\n\nexport default MovieItem;"]},"metadata":{},"sourceType":"module"}