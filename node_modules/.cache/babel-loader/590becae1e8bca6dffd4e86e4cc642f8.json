{"ast":null,"code":"var _jsxFileName = \"/home/richard/Development/reactjs/beta-shoppies/src/components/MovieItem.js\",\n    _s = $RefreshSig$();\n\nimport './MovieItem.css';\nimport React, { useState } from 'react';\nimport NA from '../assets/funny.jpg';\nimport omdb from '../api/omdb';\nimport Button from '@material-ui/core/Button';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieItem = ({\n  movie,\n  onNominate,\n  nominations\n}) => {\n  _s();\n\n  const movieId = movie.imdbID;\n  const [title, setTitle] = useState('');\n  const [actors, setActors] = useState('');\n  const [awards, setAwards] = useState('');\n  const [boxOffice, setBoxOffice] = useState('');\n  const [country, setCountry] = useState('');\n  const [director, setDirector] = useState('');\n  const [genre, setGenre] = useState('');\n  const [metascore, setMetascore] = useState('');\n  const [plot, setPlot] = useState('');\n  const [runtime, setRuntime] = useState('');\n  const [website, setWebsite] = useState('');\n  const [writer, setWriter] = useState('');\n  const [releasedYear, setReleasedYear] = useState('');\n  const [imdbRating, setImdbRating] = useState('');\n  const [rottenTomatoesRating, setRottenTomatoesRating] = useState(''); // Extract more detailed information of the movie\n\n  const onClick = async () => {\n    const response = await omdb.get('', {\n      params: {\n        i: movieId\n      }\n    });\n    setTitle(response.data.Title);\n    setActors(response.data.Actors);\n    setAwards(response.data.Awards);\n    setBoxOffice(response.data.BoxOffice);\n    setCountry(response.data.Country);\n    setDirector(response.data.Director);\n    setGenre(response.data.Genre);\n    setMetascore(response.data.Metascore);\n    setPlot(response.data.Plot);\n    setRuntime(response.data.Runtime);\n    setWebsite(response.data.Website);\n    setWriter(response.data.Writer);\n    setReleasedYear(response.data.Released); // setImdbRating(response.data.Ratings[0].Value);\n    // setRottenTomatoesRating(response.data.Ratings[1].Value);\n\n    console.log(\"Detail response:\");\n    console.log(response);\n  };\n\n  const onNominateMovie = nominatedMovie => {\n    // Verifies if the nomination has already been nominated\n    console.log(\"Current nominations: \");\n    console.log(nominations);\n\n    if (nominations.includes(nominatedMovie)) {\n      console.log(\"Already nominated!\");\n    } else if (nominations.length < 5) {\n      console.log(\"New nomination\");\n      onNominate(nominatedMovie);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: movie.Title,\n      src: movie.Poster === \"N/A\" ? NA : movie.Poster\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), console.log(movie), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Title: \", title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Actors: \", actors]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Awards: \", awards]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Box Office: \", boxOffice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Country: \", country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Director: \", director]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Genre: \", genre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Metascore: \", metascore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Plot: \", plot]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Runtime: \", runtime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Website: \", website]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Writer: \", writer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"ReleasedYear: \", releasedYear]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"IMDb Rating: \", imdbRating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Rotten Tomatoes Rating: \", rottenTomatoesRating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: () => onNominateMovie(movie),\n          children: \"Nominate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          endIcon: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 34\n          }, this),\n          size: \"small\",\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            onClick();\n          },\n          children: \"Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, movie.imdbID, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieItem, \"9z31/Wk3DGIPkQjSWH3LhCh2W2w=\");\n\n_c = MovieItem;\nexport default MovieItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieItem\");","map":{"version":3,"sources":["/home/richard/Development/reactjs/beta-shoppies/src/components/MovieItem.js"],"names":["React","useState","NA","omdb","Button","InfoIcon","MovieItem","movie","onNominate","nominations","movieId","imdbID","title","setTitle","actors","setActors","awards","setAwards","boxOffice","setBoxOffice","country","setCountry","director","setDirector","genre","setGenre","metascore","setMetascore","plot","setPlot","runtime","setRuntime","website","setWebsite","writer","setWriter","releasedYear","setReleasedYear","imdbRating","setImdbRating","rottenTomatoesRating","setRottenTomatoesRating","onClick","response","get","params","i","data","Title","Actors","Awards","BoxOffice","Country","Director","Genre","Metascore","Plot","Runtime","Website","Writer","Released","console","log","onNominateMovie","nominatedMovie","includes","length","Poster"],"mappings":"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","sourcesContent":["import './MovieItem.css';\nimport React, { useState } from 'react';\nimport NA from '../assets/funny.jpg';\nimport omdb from '../api/omdb';\nimport Button from '@material-ui/core/Button';\nimport InfoIcon from '@material-ui/icons/Info';\n\n\nconst MovieItem = ({ movie, onNominate, nominations }) => {\n    const movieId = movie.imdbID;\n\n    const [title, setTitle] = useState('');\n    const [actors, setActors] = useState('');\n    const [awards, setAwards] = useState('');\n    const [boxOffice, setBoxOffice] = useState('');\n    const [country, setCountry] = useState('');\n    const [director, setDirector] = useState('');\n    const [genre, setGenre] = useState('');\n    const [metascore, setMetascore] = useState('');\n    const [plot, setPlot] = useState('');\n    const [runtime, setRuntime] = useState('');\n    const [website, setWebsite] = useState('');\n    const [writer, setWriter] = useState('');\n    const [releasedYear, setReleasedYear] = useState('');\n    const [imdbRating, setImdbRating] = useState('');\n    const [rottenTomatoesRating, setRottenTomatoesRating] = useState('');\n\n    // Extract more detailed information of the movie\n    const onClick = async () => {\n        const response = await omdb.get(\n            '',\n            {\n                params: {\n                    i: movieId\n                }\n            }\n        );\n\n        setTitle(response.data.Title);\n        setActors(response.data.Actors);\n        setAwards(response.data.Awards);\n        setBoxOffice(response.data.BoxOffice);\n        setCountry(response.data.Country);\n        setDirector(response.data.Director);\n        setGenre(response.data.Genre);\n        setMetascore(response.data.Metascore);\n        setPlot(response.data.Plot);\n        setRuntime(response.data.Runtime);\n        setWebsite(response.data.Website);\n        setWriter(response.data.Writer);\n        setReleasedYear(response.data.Released);\n        // setImdbRating(response.data.Ratings[0].Value);\n        // setRottenTomatoesRating(response.data.Ratings[1].Value);\n\n        console.log(\"Detail response:\");\n        console.log(response);\n    };\n\n    const onNominateMovie = (nominatedMovie) => {\n        // Verifies if the nomination has already been nominated\n        console.log(\"Current nominations: \");\n        console.log(nominations);\n        if (nominations.includes(nominatedMovie)) {\n            console.log(\"Already nominated!\");\n        } else if (nominations.length < 5) {\n            console.log(\"New nomination\");\n            onNominate(nominatedMovie);\n        }\n    };\n\n    return (\n        <div className=\"movie-item\" key={movie.imdbID}>\n            <img alt={movie.Title} src={movie.Poster === \"N/A\" ? NA : movie.Poster} />\n\n            {console.log(movie)}\n            <div>\n                <div>Title: {title}</div>\n                <div>Actors: {actors}</div>\n                <div>Awards: {awards}</div>\n                <div>Box Office: {boxOffice}</div>\n                <div>Country: {country}</div>\n                <div>Director: {director}</div>\n                <div>Genre: {genre}</div>\n                <div>Metascore: {metascore}</div>\n                <div>Plot: {plot}</div>\n                <div>Runtime: {runtime}</div>\n                <div>Website: {website}</div>\n                <div>Writer: {writer}</div>\n                <div>ReleasedYear: {releasedYear}</div>\n                <div>IMDb Rating: {imdbRating}</div>\n                <div>Rotten Tomatoes Rating: {rottenTomatoesRating}</div>\n                <div>\n                    <Button\n                        size=\"small\"\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={() => onNominateMovie(movie)} >Nominate</Button>\n                    <Button\n                        endIcon={<InfoIcon />}\n                        size=\"small\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => { onClick() }}\n                    >Info</Button>\n\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default MovieItem;"]},"metadata":{},"sourceType":"module"}