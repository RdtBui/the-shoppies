{"ast":null,"code":"var _jsxFileName = \"/home/richard/Development/reactjs/beta-shoppies/src/components/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport Grid from '@material-ui/core/Grid';\nimport { FilmData } from './FilmData';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport ErrorTwoTone from '@material-ui/icons/ErrorTwoTone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  searchIcon: {\n    padding: 10\n  },\n  searchBar: {\n    paddingTop: 11,\n    paddingBottom: 13,\n    paddingRight: 20\n  }\n}));\nconst filter = createFilterOptions();\n\nconst SearchBar = ({\n  onTermSubmit,\n  searchError\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(null);\n  const [errorMessage, setErrorMessage] = React.useState(false);\n  useEffect(() => {\n    if (searchError !== '') {\n      setErrorMessage(searchError === \"Incorrect IMDb ID.\" ? \"Please enter a movie title\" : searchError);\n    } else {\n      setErrorMessage(false);\n    }\n  }, [searchError]);\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n\n    if (value === null) {\n      onTermSubmit(null);\n    } else {\n      onTermSubmit(value.title);\n    }\n  };\n\n  const errorDisplay = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"errrrrrrrrrrrr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.searchBar,\n    children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n      value: value,\n      onChange: (event, newValue) => {\n        if (typeof newValue === 'string') {\n          setValue({\n            title: newValue\n          });\n        } else if (newValue && newValue.inputValue) {\n          // Create a new value from the user input\n          setValue({\n            title: newValue.inputValue\n          });\n        } else {\n          setValue(newValue);\n        }\n      },\n      filterOptions: (options, params) => {\n        const filtered = filter(options, params); // Suggest the creation of a new value\n\n        if (params.inputValue !== '') {\n          filtered.push({\n            inputValue: params.inputValue,\n            title: `Add \"${params.inputValue}\"`\n          });\n        }\n\n        return filtered;\n      },\n      selectOnFocus: true,\n      clearOnBlur: true,\n      handleHomeEndKeys: true,\n      id: \"free-solo-with-text-demo\",\n      options: FilmData,\n      getOptionLabel: option => {\n        // Value selected with enter, right from the input\n        if (typeof option === 'string') {\n          return option;\n        } // Add \"xxx\" option created dynamically\n\n\n        if (option.inputValue) {\n          return option.inputValue;\n        } // Regular option\n\n\n        return option.title;\n      },\n      renderOption: option => option.title,\n      style: {\n        width: \"100%\"\n      },\n      freeSolo: true,\n      renderInput: params => /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          xs: 2,\n          sm: 1,\n          md: 1,\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n            justifyContent: \"center\",\n            fontSize: \"large\",\n            className: classes.searchIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          sm: 11,\n          md: 11,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: onFormSubmit,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              error: errorMessage ? true : false,\n              helperText: errorMessage ? errorDisplay : '',\n              size: \"small\",\n              variant: \"outlined\",\n              label: \"Search a Movie\" // color=\"secondary\"\n              ,\n              margin: \"dense\",\n              ...params\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBar, \"7XD0brMtZdSBJthTjfxRcm9yyeE=\", false, function () {\n  return [useStyles];\n});\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/home/richard/Development/reactjs/beta-shoppies/src/components/SearchBar.js"],"names":["React","useState","useEffect","SearchIcon","TextField","Autocomplete","createFilterOptions","Grid","FilmData","Paper","makeStyles","ThemeProvider","ErrorTwoTone","useStyles","theme","root","padding","display","alignItems","width","input","marginLeft","spacing","flex","searchIcon","searchBar","paddingTop","paddingBottom","paddingRight","filter","SearchBar","onTermSubmit","searchError","classes","value","setValue","errorMessage","setErrorMessage","onFormSubmit","event","preventDefault","title","errorDisplay","newValue","inputValue","options","params","filtered","push","option"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport Grid from '@material-ui/core/Grid';\nimport { FilmData } from './FilmData';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport ErrorTwoTone from '@material-ui/icons/ErrorTwoTone';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: 400,\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    searchIcon: {\n        padding: 10,\n    },\n    searchBar: {\n        paddingTop: 11,\n        paddingBottom: 13,\n        paddingRight: 20,\n    },\n}));\n\nconst filter = createFilterOptions();\n\n\nconst SearchBar = ({ onTermSubmit, searchError }) => {\n    const classes = useStyles();\n\n    const [value, setValue] = React.useState(null);\n    const [errorMessage, setErrorMessage] = React.useState(false);\n\n    useEffect(() => {\n        if (searchError !== '') {\n            setErrorMessage(searchError === \"Incorrect IMDb ID.\" ? \"Please enter a movie title\" : searchError);\n        } else {\n            setErrorMessage(false);\n        }\n    }, [searchError]);\n\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n        if (value === null) {\n            onTermSubmit(null);\n        } else {\n            onTermSubmit(value.title);\n\n        }\n    };\n\n    const errorDisplay = () => {\n        return (\n            <div>\n                {/* <ErrorTwoTone /> {errorMessage} */}\n        errrrrrrrrrrrr\n            </div>\n        );\n    };\n\n    return (\n        <Paper className={classes.searchBar}>\n            <Autocomplete\n                value={value}\n                onChange={(event, newValue) => {\n                    if (typeof newValue === 'string') {\n                        setValue({\n                            title: newValue,\n                        });\n                    } else if (newValue && newValue.inputValue) {\n                        // Create a new value from the user input\n                        setValue({\n                            title: newValue.inputValue,\n                        });\n                    } else {\n                        setValue(newValue);\n                    }\n                }}\n                filterOptions={(options, params) => {\n                    const filtered = filter(options, params);\n\n                    // Suggest the creation of a new value\n                    if (params.inputValue !== '') {\n                        filtered.push({\n                            inputValue: params.inputValue,\n                            title: `Add \"${params.inputValue}\"`,\n                        });\n                    }\n                    return filtered;\n                }}\n                selectOnFocus\n                clearOnBlur\n                handleHomeEndKeys\n                id=\"free-solo-with-text-demo\"\n                options={FilmData}\n                getOptionLabel={(option) => {\n                    // Value selected with enter, right from the input\n                    if (typeof option === 'string') {\n                        return option;\n                    }\n                    // Add \"xxx\" option created dynamically\n                    if (option.inputValue) {\n                        return option.inputValue;\n                    }\n                    // Regular option\n                    return option.title;\n                }}\n                renderOption={(option) => option.title}\n                style={{ width: \"100%\" }}\n                freeSolo\n                renderInput={(params) => (\n                    <Grid container direction=\"row\" alignItems=\"center\">\n                        <Grid container item xs={2} sm={1} md={1} justify=\"center\">\n                            <SearchIcon justifyContent=\"center\" fontSize=\"large\" className={classes.searchIcon} />\n                        </Grid>\n                        <Grid item xs={10} sm={11} md={11}>\n                            <form onSubmit={onFormSubmit}>\n                                <TextField\n                                    error={errorMessage ? true : false}\n                                    helperText={errorMessage ? errorDisplay : ''}\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    label=\"Search a Movie\"\n                                    // color=\"secondary\"\n                                    margin=\"dense\"\n                                    {...params}\n                                />\n                            </form>\n                        </Grid>\n                    </Grid>\n                )}\n            />\n        </Paper>\n    );\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}