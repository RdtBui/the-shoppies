{"ast":null,"code":"var _jsxFileName = \"/home/richard/Development/reactjs/beta-shoppies/src/components/NominationAlertDialog.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Pengu from '../assets/oscar_found.png';\nimport Slide from '@material-ui/core/Slide';\nimport NominationList from './NominationList';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport TouchCarousel from 'react-touch-carousel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n});\n_c2 = Transition;\nexport default function NominationAlertDialog({\n  nominations,\n  openDialog,\n  handleCloseDialog\n}) {\n  const nominationPosters = nominations.map(nomination => {\n    return nomination.Poster;\n  });\n\n  function CarouselContainer(props) {\n    const {\n      cursor,\n      carouselState: {\n        active,\n        dragging\n      },\n      ...rest\n    } = props;\n    let current = -Math.round(cursor) % data.length;\n\n    while (current < 0) {\n      current += data.length;\n    } // Put current card at center\n\n\n    const translateX = (cursor - cardPadCount) * cardSize + (carouselWidth - cardSize) / 2;\n    return /*#__PURE__*/_jsxDEV(NonPassiveTouchTarget, {\n      className: cx('carousel-container', {\n        'is-active': active,\n        'is-dragging': dragging\n      }),\n      children: [/*#__PURE__*/_jsxDEV(NonPassiveTouchTarget, {\n        className: \"carousel-track\",\n        style: {\n          transform: `translate3d(${translateX}px, 0, 0)`\n        },\n        ...rest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carousel-pagination-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"carousel-pagination\",\n          children: data.map((_, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: current === index ? 'current' : ''\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n  function renderCard(index, modIndex, cursor) {\n    const item = nominationPosters[modIndex];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-card\",\n      onClick: () => log(`clicked card ${1 + modIndex}`),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carousel-card-inner\",\n        style: {\n          backgroundColor: item.background\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"carousel-title\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"carousel-text\",\n          children: item.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      TransitionComponent: Transition,\n      fullWidth: true,\n      maxWidth: \"xl\",\n      keepMounted: true,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Your Nominations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        style: {},\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: \"dis your list yo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"100%\",\n            backgroundColor: \"#FFB7B2\"\n          },\n          children: [\"nominations\", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: nominations[0].Poster\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          color: \"primary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_c3 = NominationAlertDialog;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"NominationAlertDialog\");","map":{"version":3,"sources":["/home/richard/Development/reactjs/beta-shoppies/src/components/NominationAlertDialog.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Pengu","Slide","NominationList","Grid","Box","TouchCarousel","Transition","forwardRef","props","ref","NominationAlertDialog","nominations","openDialog","handleCloseDialog","nominationPosters","map","nomination","Poster","CarouselContainer","cursor","carouselState","active","dragging","rest","current","Math","round","data","length","translateX","cardPadCount","cardSize","carouselWidth","cx","transform","_","index","renderCard","modIndex","item","log","backgroundColor","background","title","text","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Pengu from '../assets/oscar_found.png';\nimport Slide from '@material-ui/core/Slide';\nimport NominationList from './NominationList';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport TouchCarousel from 'react-touch-carousel';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function NominationAlertDialog({ nominations, openDialog, handleCloseDialog }) {\n    const nominationPosters = nominations.map((nomination) => {\n        return nomination.Poster;\n    });\n\n    function CarouselContainer(props) {\n        const { cursor, carouselState: { active, dragging }, ...rest } = props\n        let current = -Math.round(cursor) % data.length\n        while (current < 0) {\n            current += data.length\n        }\n        // Put current card at center\n        const translateX = (cursor - cardPadCount) * cardSize + (carouselWidth - cardSize) / 2\n        return (\n            <NonPassiveTouchTarget\n                className={cx(\n                    'carousel-container',\n                    {\n                        'is-active': active,\n                        'is-dragging': dragging\n                    }\n                )}\n            >\n                <NonPassiveTouchTarget\n                    className='carousel-track'\n                    style={{ transform: `translate3d(${translateX}px, 0, 0)` }}\n                    {...rest}\n                />\n\n                <div className='carousel-pagination-wrapper'>\n                    <ol className='carousel-pagination'>\n                        {data.map((_, index) => (\n                            <li\n                                key={index}\n                                className={current === index ? 'current' : ''}\n                            />\n                        ))}\n                    </ol>\n                </div>\n            </NonPassiveTouchTarget>\n        )\n    }\n\n    function renderCard(index, modIndex, cursor) {\n        const item = nominationPosters[modIndex];\n\n        return (\n            <div\n                key={index}\n                className='carousel-card'\n                onClick={() => log(`clicked card ${1 + modIndex}`)}\n            >\n                <div\n                    className='carousel-card-inner'\n                    style={{ backgroundColor: item.background }}\n                >\n                    <div className='carousel-title'>{item.title}</div>\n                    <div className='carousel-text'>{item.text}</div>\n                </div>\n            </div>\n        );\n    }\n\n\n\n\n    return (\n\n        <div>\n            <Dialog\n                open={openDialog}\n                onClose={handleCloseDialog}\n                TransitionComponent={Transition}\n                fullWidth={true}\n                maxWidth='xl'\n                keepMounted\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"Your Nominations\"}</DialogTitle>\n                <DialogContent style={{}}>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        dis your list yo\n                        {/* <img alt=\"Oscar the Penguin Nomination max\" src={Pengu} /> */}\n                    </DialogContentText>\n\n                    <div style={{ height: \"100%\", backgroundColor: \"#FFB7B2\" }}>\n                        {/* {chosenNominations} */}\n                        nominations\n                        <div>\n                            <img src={nominations[0].Poster} />\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseDialog} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}