{"ast":null,"code":"var _jsxFileName = \"/home/richard/Development/reactjs/beta-shoppies/src/components/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react'; // Material UI\n\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport ErrorTwoTone from '@material-ui/icons/ErrorTwoTone';\nimport { FilmData } from './FilmData';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  searchBar: {\n    paddingTop: 11,\n    paddingBottom: 13,\n    paddingRight: 20\n  },\n  errorIcon: {\n    marginRight: 5\n  }\n}));\nconst filter = createFilterOptions();\n\nconst SearchBar = ({\n  onTermSubmit,\n  searchError,\n  resultsAmount\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(null);\n  const [term, setTerm] = React.useState('');\n  const [errorMessage, setErrorMessage] = React.useState(false);\n  useEffect(() => {\n    if (searchError !== '') {\n      setErrorMessage(searchError === 'Incorrect IMDb ID.' ? 'Please enter a movie title' : searchError);\n    } else {\n      setErrorMessage(false);\n    }\n  }, [searchError]);\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n\n    if (value === null) {\n      onTermSubmit(null);\n    } else {\n      onTermSubmit(value.title);\n      setTerm(value.title);\n    }\n  };\n\n  const errorDisplay = () => {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorTwoTone, {\n        className: classes.errorIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), errorMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"left\",\n    in: true,\n    mountOnEnter: true,\n    unmountOnExit: true,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.searchBar,\n      variant: \"outlined\",\n      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n        value: value,\n        onChange: (event, newValue) => {\n          if (typeof newValue === 'string') {\n            setValue({\n              title: newValue\n            });\n          } else if (newValue && newValue.inputValue) {\n            // Create a new value from the user input\n            setValue({\n              title: newValue.inputValue\n            });\n          } else {\n            setValue(newValue);\n          }\n        },\n        filterOptions: (options, params) => {\n          const filtered = filter(options, params); // Suggest the creation of a new value\n\n          if (params.inputValue !== '') {\n            filtered.push({\n              inputValue: params.inputValue,\n              title: `Search for \"${params.inputValue}\"`\n            });\n          }\n\n          return filtered;\n        },\n        selectOnFocus: true,\n        clearOnBlur: true,\n        handleHomeEndKeys: true,\n        id: \"free-solo-with-text-demo\",\n        options: FilmData,\n        getOptionLabel: option => {\n          // Value selected with enter, right from the input\n          if (typeof option === 'string') {\n            return option;\n          } // Add \"xxx\" option created dynamically\n\n\n          if (option.inputValue) {\n            return option.inputValue;\n          } // Regular option\n\n\n          return option.title;\n        },\n        renderOption: option => option.title,\n        style: {\n          width: '100%'\n        },\n        freeSolo: true,\n        renderInput: params => /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            xs: 2,\n            sm: 1,\n            md: 1,\n            justify: \"center\",\n            children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n              justify: \"center\",\n              className: classes.searchIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 10,\n            sm: 11,\n            md: 11,\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: onFormSubmit,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                error: errorMessage ? true : false,\n                helperText: errorMessage ? errorDisplay() : resultsAmount === 0 ? '' : `Found ${resultsAmount} results for \"${term}\"`,\n                size: \"small\",\n                variant: \"outlined\",\n                label: \"Search a Movie\",\n                margin: \"dense\",\n                ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBar, \"PWEQRTTI/mAwCfF+Ys9kcqfwziI=\", false, function () {\n  return [useStyles];\n});\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/home/richard/Development/reactjs/beta-shoppies/src/components/SearchBar.js"],"names":["React","useEffect","Autocomplete","createFilterOptions","Box","Card","ErrorTwoTone","FilmData","Grid","makeStyles","SearchIcon","Slide","TextField","useStyles","theme","root","padding","display","alignItems","width","input","marginLeft","spacing","flex","searchBar","paddingTop","paddingBottom","paddingRight","errorIcon","marginRight","filter","SearchBar","onTermSubmit","searchError","resultsAmount","classes","value","setValue","useState","term","setTerm","errorMessage","setErrorMessage","onFormSubmit","event","preventDefault","title","errorDisplay","newValue","inputValue","options","params","filtered","push","option","searchIcon"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\n\n// Material UI\nimport Autocomplete, {\n    createFilterOptions,\n} from '@material-ui/lab/Autocomplete';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport ErrorTwoTone from '@material-ui/icons/ErrorTwoTone';\nimport { FilmData } from './FilmData';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: 400,\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    searchBar: {\n        paddingTop: 11,\n        paddingBottom: 13,\n        paddingRight: 20,\n    },\n    errorIcon: {\n        marginRight: 5,\n    },\n}));\n\nconst filter = createFilterOptions();\n\nconst SearchBar = ({ onTermSubmit, searchError, resultsAmount }) => {\n    const classes = useStyles();\n\n    const [value, setValue] = React.useState(null);\n    const [term, setTerm] = React.useState('');\n    const [errorMessage, setErrorMessage] = React.useState(false);\n\n    useEffect(() => {\n        if (searchError !== '') {\n            setErrorMessage(\n                searchError === 'Incorrect IMDb ID.'\n                    ? 'Please enter a movie title'\n                    : searchError\n            );\n        } else {\n            setErrorMessage(false);\n        }\n    }, [searchError]);\n\n    const onFormSubmit = event => {\n        event.preventDefault();\n        if (value === null) {\n            onTermSubmit(null);\n        } else {\n            onTermSubmit(value.title);\n            setTerm(value.title);\n        }\n    };\n\n    const errorDisplay = () => {\n        return (\n            <Box display='flex' alignItems='center'>\n                <ErrorTwoTone className={classes.errorIcon} />\n                {errorMessage}\n            </Box>\n        );\n    };\n\n    return (\n        <Slide direction='left' in={true} mountOnEnter unmountOnExit>\n            <Card className={classes.searchBar} variant='outlined'>\n                <Autocomplete\n                    value={value}\n                    onChange={(event, newValue) => {\n                        if (typeof newValue === 'string') {\n                            setValue({\n                                title: newValue,\n                            });\n                        } else if (newValue && newValue.inputValue) {\n                            // Create a new value from the user input\n                            setValue({\n                                title: newValue.inputValue,\n                            });\n                        } else {\n                            setValue(newValue);\n                        }\n                    }}\n                    filterOptions={(options, params) => {\n                        const filtered = filter(options, params);\n\n                        // Suggest the creation of a new value\n                        if (params.inputValue !== '') {\n                            filtered.push({\n                                inputValue: params.inputValue,\n                                title: `Search for \"${params.inputValue}\"`,\n                            });\n                        }\n                        return filtered;\n                    }}\n                    selectOnFocus\n                    clearOnBlur\n                    handleHomeEndKeys\n                    id='free-solo-with-text-demo'\n                    options={FilmData}\n                    getOptionLabel={option => {\n                        // Value selected with enter, right from the input\n                        if (typeof option === 'string') {\n                            return option;\n                        }\n                        // Add \"xxx\" option created dynamically\n                        if (option.inputValue) {\n                            return option.inputValue;\n                        }\n                        // Regular option\n                        return option.title;\n                    }}\n                    renderOption={option => option.title}\n                    style={{ width: '100%' }}\n                    freeSolo\n                    renderInput={params => (\n                        <Grid container direction='row' alignItems='center'>\n                            <Grid\n                                container\n                                item\n                                xs={2}\n                                sm={1}\n                                md={1}\n                                justify='center'\n                            >\n                                <SearchIcon\n                                    justify='center'\n                                    className={classes.searchIcon}\n                                />\n                            </Grid>\n                            <Grid item xs={10} sm={11} md={11}>\n                                <form onSubmit={onFormSubmit}>\n                                    <TextField\n                                        error={errorMessage ? true : false}\n                                        helperText={\n                                            errorMessage\n                                                ? errorDisplay()\n                                                : resultsAmount === 0\n                                                ? ''\n                                                : `Found ${resultsAmount} results for \"${term}\"`\n                                        }\n                                        size='small'\n                                        variant='outlined'\n                                        label='Search a Movie'\n                                        margin='dense'\n                                        {...params}\n                                    />\n                                </form>\n                            </Grid>\n                        </Grid>\n                    )}\n                />\n            </Card>\n        </Slide>\n    );\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}