{"ast":null,"code":"var _jsxFileName = \"/home/richard/Development/reactjs/beta-shoppies/src/components/MovieList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MovieItem from './MovieItem';\nimport AlertWarning from './AlertWarning';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport EmptyTheater from '../assets/empty-theater.png';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: '25px'\n  },\n  secondaryHeading: {\n    color: theme.palette.text.secondary\n  }\n}));\n\nconst MovieList = ({\n  movies,\n  onNominate,\n  nominations,\n  handleLoadMore,\n  resultsAmount\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const [openAlert, setOpenAlert] = React.useState(false);\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const handleAlert = () => {\n    setOpenAlert(true);\n  };\n\n  const renderedList = movies.map(movie => {\n    let index = movies.indexOf(movie) + 1;\n    return /*#__PURE__*/_jsxDEV(MovieItem, {\n      panelIndex: index,\n      movie: movie,\n      onNominate: onNominate,\n      nominations: nominations,\n      expanded: expanded,\n      handleChange: handleChange,\n      handleAlert: handleAlert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  });\n\n  const handleClose = () => {\n    setOpenAlert(false);\n  };\n\n  const moviePlaceholder = () => {\n    return /*#__PURE__*/_jsxDEV(Slide, {\n      direction: \"down\",\n      in: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              style: {\n                marginTop: \"20px\"\n              },\n              children: \"Uh oh... it seems to be empty in here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.secondaryHeading,\n              children: \"Search and add movies to your list\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            justify: \"center\",\n            style: {\n              padding: \"0px 70px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"Empty theater seats\",\n              src: EmptyTheater,\n              style: {\n                margin: \"25px 0px\",\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderedList.length === 0 ? moviePlaceholder() : renderedList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), movies.length === 0 || movies.length >= resultsAmount ? '' : /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        width: \"100%\",\n        margin: \"20px 0px\",\n        textTransform: \"none\",\n        color: \"#428bca\",\n        borderColor: \"#428bca\"\n      },\n      variant: \"outlined\",\n      onClick: handleLoadMore,\n      children: \"More Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AlertWarning, {\n        content: \"Your nomination list is full!\",\n        handleOpen: openAlert,\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieList, \"+IN6eCQ12fkzCBSJonEbJQ7Ma7Q=\", false, function () {\n  return [useStyles];\n});\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["/home/richard/Development/reactjs/beta-shoppies/src/components/MovieList.js"],"names":["React","makeStyles","MovieItem","AlertWarning","Card","Grid","EmptyTheater","Button","Typography","Slide","useStyles","theme","root","width","marginTop","secondaryHeading","color","palette","text","secondary","MovieList","movies","onNominate","nominations","handleLoadMore","resultsAmount","classes","expanded","setExpanded","useState","openAlert","setOpenAlert","handleChange","panel","event","isExpanded","handleAlert","renderedList","map","movie","index","indexOf","handleClose","moviePlaceholder","padding","margin","length","textTransform","borderColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MovieItem from './MovieItem';\nimport AlertWarning from './AlertWarning';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport EmptyTheater from '../assets/empty-theater.png';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        marginTop: '25px',\n    },\n    secondaryHeading: {\n        color: theme.palette.text.secondary\n    },\n}));\n\nconst MovieList = ({ movies, onNominate, nominations, handleLoadMore, resultsAmount }) => {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n    const [openAlert, setOpenAlert] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const handleAlert = () => {\n        setOpenAlert(true);\n    };\n\n    const renderedList = movies.map((movie) => {\n        let index = movies.indexOf(movie) + 1;\n        return (\n            <MovieItem panelIndex={index} movie={movie} onNominate={onNominate} nominations={nominations} expanded={expanded} handleChange={handleChange} handleAlert={handleAlert} />\n        );\n    });\n\n    const handleClose = () => {\n        setOpenAlert(false);\n    };\n\n    const moviePlaceholder = () => {\n        return (\n            <Slide direction=\"down\" in={true} mountOnEnter unmountOnExit>\n                <Card>\n                    <Grid container direction=\"column\" alignItems=\"center\">\n                        <Grid item xs={12}>\n                            <Typography variant=\"h5\" style={{ marginTop: \"20px\" }}>Uh oh... it seems to be empty in here</Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography className={classes.secondaryHeading}>Search and add movies to your list</Typography>\n                        </Grid>\n                        <Grid item xs={12} justify=\"center\" style={{ padding: \"0px 70px\" }}>\n\n                            <img alt=\"Empty theater seats\" src={EmptyTheater} style={{\n                                margin: \"25px 0px\",\n                                width: '100%',\n                            }} />\n                        </Grid>\n                    </Grid>\n                </Card>\n            </Slide>\n        );\n    };\n\n    return (\n        <div className={classes.root}>\n            <div>\n                {renderedList.length === 0 ? moviePlaceholder() : renderedList}\n            </div>\n            {\n                (movies.length === 0) || (movies.length >= resultsAmount) ? '' :\n                    <Button style={{ width: \"100%\", margin: \"20px 0px\", textTransform: \"none\", color: \"#428bca\", borderColor: \"#428bca\" }} variant=\"outlined\" onClick={handleLoadMore}>More Results</Button>\n            }\n            <div>\n                <AlertWarning content=\"Your nomination list is full!\" handleOpen={openAlert} handleClose={handleClose} />\n            </div>\n        </div>\n    );\n}\n\nexport default MovieList;"]},"metadata":{},"sourceType":"module"}