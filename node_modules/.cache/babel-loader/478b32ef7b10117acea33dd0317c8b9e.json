{"ast":null,"code":"var _jsxFileName = \"/home/richard/Development/reactjs/beta-shoppies/src/components/MovieItem.js\",\n    _s = $RefreshSig$();\n\nimport './MovieItem.css';\nimport React, { useState, useEffect } from 'react';\nimport NA from '../assets/funny.jpg';\nimport omdb from '../api/omdb';\nimport Button from '@material-ui/core/Button';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport MovieDetails from './MovieDetails';\nimport InfoTwoToneIcon from '@material-ui/icons/InfoTwoTone';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertWarning from './AlertWarning';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  secondaryHeading: {\n    color: theme.palette.text.secondary\n  },\n  awardsMargin: {\n    marginTop: '15px',\n    padding: '0px 12px'\n  },\n  nominateButtonMargin: {\n    margin: '15px 0px'\n  },\n  button: {\n    textTransform: \"none\",\n    borderRadius: \"18px\",\n    padding: \"7px 20px\"\n  },\n  awardsBackground: {\n    backgroundColor: \"yellow\"\n  },\n  infoIcon: {\n    color: \"orange\",\n    marginRight: \"10px\"\n  }\n}));\n\nconst MovieItem = ({\n  movie,\n  onNominate,\n  nominations,\n  panelIndex,\n  expanded,\n  handleChange\n}) => {\n  _s();\n\n  const movieId = movie.imdbID;\n  const [title, setTitle] = useState('');\n  const [awards, setAwards] = useState('');\n  const [runtime, setRuntime] = useState('');\n  const [releasedYear, setReleasedYear] = useState('');\n  const [country, setCountry] = useState('');\n  const [isDisable, setIsDisable] = useState(false);\n  const [openAlert, setOpenAlert] = useState(false);\n  const classes = useStyles();\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await omdb.get('', {\n        params: {\n          i: movieId,\n          plot: \"full\"\n        }\n      });\n      const results = response.data;\n      setTitle(results.Title);\n      setAwards(results.Awards);\n      setRuntime(results.Runtime);\n      setReleasedYear(results.Year);\n      setCountry(results.Country);\n    };\n\n    fetchData();\n  }); // Disable and enable button according to nomination\n\n  useEffect(() => {\n    if (nominations.includes(movie)) {\n      setIsDisable(true);\n    } else {\n      setIsDisable(false);\n    }\n  }); // Extract more detailed information of the movie when more info is needed\n\n  const onNominateMovie = nominatedMovie => {\n    // Verifies if the nomination has already been nominated\n    console.log(\"Current nominations: \");\n    console.log(nominations);\n\n    if (nominations.includes(nominatedMovie)) {\n      console.log(\"Already nominated!\");\n    } else if (nominations.length < 5) {\n      setIsDisable(true);\n      console.log(\"New nomination\");\n      onNominate(nominatedMovie);\n    } else if (nominations.length === 5) {\n      console.log(\"Nomination list full\");\n      setOpenAlert(true);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenAlert(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Accordion, {\n      expanded: expanded === `panel${panelIndex}`,\n      onChange: handleChange(`panel${panelIndex}`),\n      children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n        expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 33\n        }, this),\n        \"aria-controls\": `panel${panelIndex}bh-content`,\n        id: `panel${panelIndex}bh-header`,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: \"3\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"movie-poster\",\n              alt: movie.Title,\n              src: movie.Poster === \"N/A\" ? NA : movie.Poster\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            alignItems: \"flex-start\",\n            sm: \"9\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.secondaryHeading,\n                children: [releasedYear, \" (\", country, \")  |  \", runtime, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this), awards === 'N/A' ? '' : /*#__PURE__*/_jsxDEV(Box, {\n                className: classes.awardsBackground,\n                display: \"flex\",\n                children: [/*#__PURE__*/_jsxDEV(InfoTwoToneIcon, {\n                  className: classes.infoIcon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: awards\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Box // Prevents the nominate button from opening the detail sheet\n              , {\n                onClick: event => event.stopPropagation(),\n                onFocus: event => event.stopPropagation(),\n                flexDirection: \"column\",\n                display: \"flex\",\n                alignItems: \"center\",\n                className: classes.nominateButtonMargin,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    cursor: 'not-allowed'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: classes.button,\n                    endIcon: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 54\n                    }, this),\n                    disabled: isDisable,\n                    size: \"small\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: () => onNominateMovie(movie),\n                    children: \"Nominate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        variant: \"middle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n        children: /*#__PURE__*/_jsxDEV(MovieDetails, {\n          movieId: movieId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AlertWarning, {\n      handleOpen: openAlert,\n      handleClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieItem, \"yiDssTfDe8m4bUz/HUHYDKcS7u8=\", false, function () {\n  return [useStyles];\n});\n\n_c = MovieItem;\nexport default MovieItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieItem\");","map":{"version":3,"sources":["/home/richard/Development/reactjs/beta-shoppies/src/components/MovieItem.js"],"names":["React","useState","useEffect","NA","omdb","Button","AddCircleOutlineIcon","makeStyles","Accordion","AccordionDetails","AccordionSummary","Typography","ExpandMoreIcon","Divider","Grid","Box","MovieDetails","InfoTwoToneIcon","Alert","AlertWarning","useStyles","theme","secondaryHeading","color","palette","text","secondary","awardsMargin","marginTop","padding","nominateButtonMargin","margin","button","textTransform","borderRadius","awardsBackground","backgroundColor","infoIcon","marginRight","MovieItem","movie","onNominate","nominations","panelIndex","expanded","handleChange","movieId","imdbID","title","setTitle","awards","setAwards","runtime","setRuntime","releasedYear","setReleasedYear","country","setCountry","isDisable","setIsDisable","openAlert","setOpenAlert","classes","fetchData","response","get","params","i","plot","results","data","Title","Awards","Runtime","Year","Country","includes","onNominateMovie","nominatedMovie","console","log","length","handleClose","event","reason","Poster","stopPropagation","cursor"],"mappings":"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","sourcesContent":["import './MovieItem.css';\nimport React, { useState, useEffect } from 'react';\nimport NA from '../assets/funny.jpg';\nimport omdb from '../api/omdb';\nimport Button from '@material-ui/core/Button';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport MovieDetails from './MovieDetails'\nimport InfoTwoToneIcon from '@material-ui/icons/InfoTwoTone';\n\nimport Alert from '@material-ui/lab/Alert';\nimport AlertWarning from './AlertWarning';\n\n\nconst useStyles = makeStyles((theme) => ({\n    secondaryHeading: {\n        color: theme.palette.text.secondary\n    },\n    awardsMargin: {\n        marginTop: '15px',\n        padding: '0px 12px',\n    },\n    nominateButtonMargin: {\n        margin: '15px 0px',\n    },\n    button: {\n        textTransform: \"none\",\n        borderRadius: \"18px\",\n        padding: \"7px 20px\",\n    },\n    awardsBackground: {\n        backgroundColor: \"yellow\",\n    },\n    infoIcon: {\n        color: \"orange\",\n        marginRight: \"10px\",\n    },\n}));\n\nconst MovieItem = ({ movie, onNominate, nominations, panelIndex, expanded, handleChange }) => {\n\n    const movieId = movie.imdbID;\n    const [title, setTitle] = useState('');\n    const [awards, setAwards] = useState('');\n    const [runtime, setRuntime] = useState('');\n    const [releasedYear, setReleasedYear] = useState('');\n    const [country, setCountry] = useState('');\n    const [isDisable, setIsDisable] = useState(false);\n    const [openAlert, setOpenAlert] = useState(false);\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const response = await omdb.get(\n                '',\n                {\n                    params: {\n                        i: movieId,\n                        plot: \"full\"\n                    }\n                }\n            );\n\n            const results = response.data;\n            setTitle(results.Title);\n            setAwards(results.Awards);\n            setRuntime(results.Runtime);\n            setReleasedYear(results.Year);\n            setCountry(results.Country);\n        };\n        fetchData();\n    });\n\n    // Disable and enable button according to nomination\n    useEffect(() => {\n        if (nominations.includes(movie)) {\n            setIsDisable(true);\n        } else {\n            setIsDisable(false);\n        }\n    });\n\n    // Extract more detailed information of the movie when more info is needed\n    const onNominateMovie = (nominatedMovie) => {\n        // Verifies if the nomination has already been nominated\n        console.log(\"Current nominations: \");\n        console.log(nominations);\n        if (nominations.includes(nominatedMovie)) {\n            console.log(\"Already nominated!\");\n        } else if (nominations.length < 5) {\n            setIsDisable(true);\n            console.log(\"New nomination\");\n            onNominate(nominatedMovie);\n        } else if (nominations.length === 5) {\n            console.log(\"Nomination list full\");\n            setOpenAlert(true);\n        }\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpenAlert(false);\n    };\n\n\n    return (\n        <div>\n            <Accordion expanded={expanded === `panel${panelIndex}`} onChange={handleChange(`panel${panelIndex}`)}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls={`panel${panelIndex}bh-content`}\n                    id={`panel${panelIndex}bh-header`}\n                >\n                    <Grid container direction=\"row\">\n                        <Grid item sm=\"3\">\n                            <img id=\"movie-poster\" alt={movie.Title} src={movie.Poster === \"N/A\" ? NA : movie.Poster} />\n                        </Grid>\n\n                        <Grid alignItems=\"flex-start\" sm=\"9\">\n                            <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n                                <Typography variant=\"h5\">{title}</Typography>\n                                <Typography className={classes.secondaryHeading}>{releasedYear} ({country})  |  {runtime} </Typography>\n                                {/* {awards === 'N/A' ? '' : <Alert severity=\"info\" className={classes.awardsMargin} ><Typography>{awards}</Typography></Alert>} */}\n                                {awards === 'N/A' ? '' :\n                                    <Box className={classes.awardsBackground} display=\"flex\" >\n                                        <InfoTwoToneIcon className={classes.infoIcon} />\n                                        <Typography>{awards}</Typography>\n                                    </Box>\n                                }\n                                <Box\n                                    // Prevents the nominate button from opening the detail sheet\n                                    onClick={(event) => event.stopPropagation()}\n                                    onFocus={(event) => event.stopPropagation()}\n                                    flexDirection=\"column\"\n                                    display=\"flex\"\n                                    alignItems=\"center\"\n                                    className={classes.nominateButtonMargin}\n                                >\n                                    <span style={{ cursor: 'not-allowed' }}>\n                                        <Button\n                                            className={classes.button}\n                                            endIcon={<AddCircleOutlineIcon />}\n                                            disabled={isDisable}\n                                            size=\"small\"\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={() => onNominateMovie(movie)}>\n                                            Nominate\n                                        </Button>\n                                    </span>\n                                </Box>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </AccordionSummary>\n                <Divider variant=\"middle\" />\n                <AccordionDetails>\n                    <MovieDetails movieId={movieId} />\n                </AccordionDetails>\n            </Accordion>\n            <AlertWarning handleOpen={openAlert} handleClose={handleClose} />\n\n        </div>\n    );\n};\n\nexport default MovieItem;"]},"metadata":{},"sourceType":"module"}