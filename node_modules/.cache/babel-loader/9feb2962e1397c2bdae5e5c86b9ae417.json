{"ast":null,"code":"var _jsxFileName = \"/home/richard/Development/reactjs/beta-shoppies/src/components/MovieItem.js\",\n    _s = $RefreshSig$();\n\nimport './MovieItem.css';\nimport React, { useState, useEffect } from 'react';\nimport NA from '../assets/funny.jpg';\nimport omdb from '../api/omdb';\nimport Button from '@material-ui/core/Button';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport MovieDetails from './MovieDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  heading: {\n    flexBasis: '33.33%',\n    flexShrink: 0\n  },\n  secondaryHeading: {\n    // fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary\n  }\n}));\n\nconst MovieItem = ({\n  movie,\n  onNominate,\n  nominations,\n  panelIndex,\n  expanded,\n  handleChange\n}) => {\n  _s();\n\n  const [movieId, setMovieId] = useState('');\n  const [title, setTitle] = useState('');\n  const [awards, setAwards] = useState('');\n  const [runtime, setRuntime] = useState('');\n  const [releasedDate, setReleasedDate] = useState('');\n  const [country, setCountry] = useState(''); // from Movielist\n\n  const classes = useStyles();\n  useEffect(() => {\n    const fetchData = async () => {\n      setMovieId(movie.imdbID);\n      const response = await omdb.get('', {\n        params: {\n          i: movieId\n        }\n      });\n      const results = response.data;\n      setTitle(results.Title);\n      setAwards(results.Awards);\n      setRuntime(results.Runtime);\n      setReleasedDate(results.Released);\n      setCountry(results.Country);\n    };\n\n    fetchData();\n  }, [movie.imdbID, movieId]); // Extract more detailed information of the movie when more info is needed\n\n  const onNominateMovie = nominatedMovie => {\n    // Verifies if the nomination has already been nominated\n    console.log(\"Current nominations: \");\n    console.log(nominations);\n\n    if (nominations.includes(nominatedMovie)) {\n      console.log(\"Already nominated!\");\n    } else if (nominations.length < 5) {\n      console.log(\"New nomination\");\n      onNominate(nominatedMovie);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Accordion, {\n    expanded: expanded === `panel${panelIndex}`,\n    onChange: handleChange(`panel${panelIndex}`),\n    children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n      expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }, this),\n      \"aria-controls\": `panel${panelIndex}bh-content`,\n      id: `panel${panelIndex}bh-header`,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: movie.Title,\n            src: movie.Poster === \"N/A\" ? NA : movie.Poster\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          alignItems: \"flex-start\",\n          sm: \"9\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.secondaryHeading,\n              children: [runtime, \" | \", releasedDate, \"(\", country, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: awards === 'N/A' ? '' : awards\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Box // Prevents the nominate button from opening the detail sheet\n            , {\n              onClick: event => event.stopPropagation(),\n              onFocus: event => event.stopPropagation(),\n              flexDirection: \"column\",\n              display: \"flex\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                endIcon: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 46\n                }, this),\n                size: \"small\",\n                variant: \"contained\",\n                color: \"secondary\",\n                onClick: () => onNominateMovie(movie),\n                children: \"Nominate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      variant: \"middle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n      children: /*#__PURE__*/_jsxDEV(MovieDetails, {\n        movieId: movieId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieItem, \"U/WtaInXw9RknvXSjg1dGMcXgj8=\", false, function () {\n  return [useStyles];\n});\n\n_c = MovieItem;\nexport default MovieItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieItem\");","map":{"version":3,"sources":["/home/richard/Development/reactjs/beta-shoppies/src/components/MovieItem.js"],"names":["React","useState","useEffect","NA","omdb","Button","FavoriteIcon","makeStyles","Accordion","AccordionDetails","AccordionSummary","Typography","ExpandMoreIcon","Divider","Grid","Box","MovieDetails","useStyles","theme","root","width","heading","flexBasis","flexShrink","secondaryHeading","color","palette","text","secondary","MovieItem","movie","onNominate","nominations","panelIndex","expanded","handleChange","movieId","setMovieId","title","setTitle","awards","setAwards","runtime","setRuntime","releasedDate","setReleasedDate","country","setCountry","classes","fetchData","imdbID","response","get","params","i","results","data","Title","Awards","Runtime","Released","Country","onNominateMovie","nominatedMovie","console","log","includes","length","Poster","event","stopPropagation"],"mappings":"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","sourcesContent":["import './MovieItem.css';\nimport React, { useState, useEffect } from 'react';\nimport NA from '../assets/funny.jpg';\nimport omdb from '../api/omdb';\nimport Button from '@material-ui/core/Button';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport MovieDetails from './MovieDetails'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        // fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary\n    },\n}));\n\nconst MovieItem = ({ movie, onNominate, nominations, panelIndex, expanded, handleChange }) => {\n\n    const [movieId, setMovieId] = useState('');\n    const [title, setTitle] = useState('');\n    const [awards, setAwards] = useState('');\n    const [runtime, setRuntime] = useState('');\n    const [releasedDate, setReleasedDate] = useState('');\n    const [country, setCountry] = useState('');\n\n    // from Movielist\n    const classes = useStyles();\n\n    useEffect(() => {\n        const fetchData = async () => {\n\n            setMovieId(movie.imdbID);\n\n            const response = await omdb.get(\n                '',\n                {\n                    params: {\n                        i: movieId\n                    }\n                }\n            );\n\n            const results = response.data;\n\n            setTitle(results.Title);\n            setAwards(results.Awards);\n            setRuntime(results.Runtime);\n            setReleasedDate(results.Released);\n            setCountry(results.Country);\n        };\n        fetchData();\n    }, [movie.imdbID, movieId]);\n\n    // Extract more detailed information of the movie when more info is needed\n\n\n    const onNominateMovie = (nominatedMovie) => {\n        // Verifies if the nomination has already been nominated\n        console.log(\"Current nominations: \");\n        console.log(nominations);\n        if (nominations.includes(nominatedMovie)) {\n            console.log(\"Already nominated!\");\n        } else if (nominations.length < 5) {\n            console.log(\"New nomination\");\n            onNominate(nominatedMovie);\n        }\n    };\n\n    return (\n        <Accordion expanded={expanded === `panel${panelIndex}`} onChange={handleChange(`panel${panelIndex}`)}>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls={`panel${panelIndex}bh-content`}\n                id={`panel${panelIndex}bh-header`}\n            >\n                <Grid container direction=\"row\">\n                    <Grid item sm=\"3\">\n                        <img alt={movie.Title} src={movie.Poster === \"N/A\" ? NA : movie.Poster} />\n                    </Grid>\n\n                    <Grid alignItems=\"flex-start\" sm=\"9\">\n                        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n                            <Typography variant=\"h4\">{title}</Typography>\n                            <Typography className={classes.secondaryHeading}>{runtime} | {releasedDate}({country})</Typography>\n                            <Typography>{awards === 'N/A' ? '' : awards}</Typography>\n                            <Box\n                                // Prevents the nominate button from opening the detail sheet\n                                onClick={(event) => event.stopPropagation()}\n                                onFocus={(event) => event.stopPropagation()}\n                                flexDirection=\"column\"\n                                display=\"flex\"\n                                alignItems=\"center\"\n                            >\n                                <Button\n                                    endIcon={<FavoriteIcon />}\n                                    size=\"small\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    onClick={() => onNominateMovie(movie)} >Nominate</Button>\n                                <Button />\n                            </Box>\n                        </Box>\n\n                    </Grid>\n                </Grid>\n\n            </AccordionSummary>\n            <Divider variant=\"middle\" />\n            <AccordionDetails>\n                <MovieDetails movieId={movieId} />\n            </AccordionDetails>\n        </Accordion>\n    );\n};\n\nexport default MovieItem;"]},"metadata":{},"sourceType":"module"}