{"ast":null,"code":"var _jsxFileName = \"/home/richard/Development/reactjs/beta-shoppies/src/components/Carousel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // Flicking carousel library\n\nimport Flicking from '@egjs/react-flicking'; // Material UI\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper'; // Style for Flicking carousel\n\nimport './carousel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  sprocketHoles: {\n    width: '25px',\n    height: '25px'\n  },\n  topSprocket: {\n    marginTop: '3px'\n  },\n  bottomSprocket: {\n    marginBottom: '3px'\n  },\n  carouselContainer: {\n    width: '700px'\n  }\n});\n\nconst Carousel = ({\n  summary\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [nominationSummary, setNominationSummary] = useState([]); // Verifies if there is 5 items in the nomination list to set the summary and update the carousel\n\n  useEffect(() => {\n    if (summary.length === 5) {\n      setNominationSummary(summary);\n    }\n  }, [summary]); // Content of each carousel which displays the nomination poster\n\n  const getContent = nomination => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          width: \"55%\",\n          alt: nomination.Title + ' poster',\n          src: nomination.Poster\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }; // Get the sprocket holes of the filmstrip\n\n\n  const getSquareHoles = () => {\n    let whiteSquares = [];\n\n    for (let i = 0; i < 19; i++) {\n      whiteSquares.push( /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.sprocketHoles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this));\n    }\n\n    return whiteSquares;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: \"carousel classes.carouselContainer\",\n    direction: \"column\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      item: true,\n      spacing: 2,\n      justify: \"center\",\n      className: classes.topSprocket,\n      children: getSquareHoles().map(square => {\n        return square;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Flicking, {\n          className: \"flicking\",\n          gap: 25,\n          circular: true,\n          moveType: {\n            type: 'snap',\n            count: 1\n          },\n          children: nominationSummary.length === 5 ? nominationSummary.map(nomination => {\n            return getContent(nomination);\n          }) : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      item: true,\n      spacing: 2,\n      justify: \"center\",\n      className: classes.bottomSprocket,\n      children: getSquareHoles().map(square => {\n        return square;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Carousel, \"xb84JXVrmW/Ln8o6HJuE91VyQVw=\", false, function () {\n  return [useStyles];\n});\n\n_c = Carousel;\nexport default Carousel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"sources":["/home/richard/Development/reactjs/beta-shoppies/src/components/Carousel.js"],"names":["React","useEffect","useState","Flicking","makeStyles","Box","Grid","Paper","useStyles","sprocketHoles","width","height","topSprocket","marginTop","bottomSprocket","marginBottom","carouselContainer","Carousel","summary","classes","nominationSummary","setNominationSummary","length","getContent","nomination","Title","Poster","getSquareHoles","whiteSquares","i","push","map","square","type","count"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\n// Flicking carousel library\nimport Flicking from '@egjs/react-flicking';\n\n// Material UI\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\n// Style for Flicking carousel\nimport './carousel.css';\n\nconst useStyles = makeStyles({\n    sprocketHoles: {\n        width: '25px',\n        height: '25px',\n    },\n    topSprocket: {\n        marginTop: '3px',\n    },\n    bottomSprocket: {\n        marginBottom: '3px',\n    },\n    carouselContainer: {\n        width: '700px',\n    },\n});\n\nconst Carousel = ({ summary }) => {\n    const classes = useStyles();\n    const [nominationSummary, setNominationSummary] = useState([]);\n\n    // Verifies if there is 5 items in the nomination list to set the summary and update the carousel\n    useEffect(() => {\n        if (summary.length === 5) {\n            setNominationSummary(summary);\n        }\n    }, [summary]);\n\n    // Content of each carousel which displays the nomination poster\n    const getContent = nomination => {\n        return (\n            <div className='panel'>\n                <Box display='flex' justifyContent='center' alignItems='center'>\n                    <img\n                        width='55%'\n                        alt={nomination.Title + ' poster'}\n                        src={nomination.Poster}\n                    />\n                </Box>\n            </div>\n        );\n    };\n\n    // Get the sprocket holes of the filmstrip\n    const getSquareHoles = () => {\n        let whiteSquares = [];\n        for (let i = 0; i < 19; i++) {\n            whiteSquares.push(\n                <Grid item>\n                    <Paper className={classes.sprocketHoles} />\n                </Grid>\n            );\n        }\n        return whiteSquares;\n    };\n\n    return (\n        <Grid\n            container\n            className='carousel classes.carouselContainer'\n            direction='column'\n            justify='space-between'\n            alignItems='center'\n        >\n            {/* Top perforations of the filmstrip */}\n            <Grid\n                container\n                item\n                spacing={2}\n                justify='center'\n                className={classes.topSprocket}\n            >\n                {getSquareHoles().map(square => {\n                    return square;\n                })}\n            </Grid>\n            {/* Nomination carousel content */}\n            <Grid item>\n                <div className='container'>\n                    <Flicking\n                        className='flicking'\n                        gap={25}\n                        circular={true}\n                        moveType={{ type: 'snap', count: 1 }}\n                    >\n                        {nominationSummary.length === 5\n                            ? nominationSummary.map(nomination => {\n                                  return getContent(nomination);\n                              })\n                            : ''}\n                    </Flicking>\n                </div>\n            </Grid>\n            {/* Bottom perforations of the filmstrip */}\n            <Grid\n                container\n                item\n                spacing={2}\n                justify='center'\n                className={classes.bottomSprocket}\n            >\n                {getSquareHoles().map(square => {\n                    return square;\n                })}\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Carousel;\n"]},"metadata":{},"sourceType":"module"}