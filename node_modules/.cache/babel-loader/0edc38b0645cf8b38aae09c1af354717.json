{"ast":null,"code":"var _jsxFileName = \"/home/richard/Development/reactjs/beta-shoppies/src/components/Rating.js\";\nimport React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  completed: \"100\"\n}];\n\nclass Rating extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playersData: []\n    };\n    this.state = {\n      playersData: data.map(item => ({ ...item,\n        completed: 0\n      }))\n    };\n  }\n\n  componentDidMount() {\n    this.timer = setTimeout(() => this.progress(1), 10);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  progress(completion) {\n    let done = 0;\n    this.setState({\n      playersData: data.map((item, i) => {\n        const {\n          completed: current\n        } = this.state.playersData[i];\n        const {\n          completed: max\n        } = item;\n\n        if (current + completion >= max) {\n          done += 1;\n        }\n\n        return { ...item,\n          completed: Math.min(current + completion, max)\n        };\n      })\n    });\n\n    if (done < data.length) {\n      this.timer = setTimeout(() => this.progress(1), 10);\n    }\n  }\n\n  render() {\n    const {\n      playersData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: playersData.map(({\n        completed\n      }) => /*#__PURE__*/_jsxDEV(CircularProgress, {\n        mode: \"determinate\",\n        thickness: \"6px\",\n        value: completed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Rating;","map":{"version":3,"sources":["/home/richard/Development/reactjs/beta-shoppies/src/components/Rating.js"],"names":["React","CircularProgress","data","completed","Rating","Component","constructor","props","state","playersData","map","item","componentDidMount","timer","setTimeout","progress","componentWillUnmount","clearTimeout","completion","done","setState","i","current","max","Math","min","length","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;;AAEA,MAAMC,IAAI,GAAG,CACT;AACIC,EAAAA,SAAS,EAAE;AADf,CADS,CAAb;;AAMA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AAKjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAJnBC,KAImB,GAJX;AACJC,MAAAA,WAAW,EAAE;AADT,KAIW;AAEf,SAAKD,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAEP,IAAI,CAACQ,GAAL,CAASC,IAAI,KAAK,EAAE,GAAGA,IAAL;AAAWR,QAAAA,SAAS,EAAE;AAAtB,OAAL,CAAb;AADJ,KAAb;AAGH;;AAEDS,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,GAAaC,UAAU,CAAC,MAAM,KAAKC,QAAL,CAAc,CAAd,CAAP,EAAyB,EAAzB,CAAvB;AACH;;AAEDC,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,YAAY,CAAC,KAAKJ,KAAN,CAAZ;AACH;;AAEDE,EAAAA,QAAQ,CAACG,UAAD,EAAa;AACjB,QAAIC,IAAI,GAAG,CAAX;AACA,SAAKC,QAAL,CAAc;AACVX,MAAAA,WAAW,EAAEP,IAAI,CAACQ,GAAL,CAAS,CAACC,IAAD,EAAOU,CAAP,KAAa;AAC/B,cAAM;AAAElB,UAAAA,SAAS,EAAEmB;AAAb,YAAyB,KAAKd,KAAL,CAAWC,WAAX,CAAuBY,CAAvB,CAA/B;AACA,cAAM;AAAElB,UAAAA,SAAS,EAAEoB;AAAb,YAAqBZ,IAA3B;;AACA,YAAIW,OAAO,GAAGJ,UAAV,IAAwBK,GAA5B,EAAiC;AAC7BJ,UAAAA,IAAI,IAAI,CAAR;AACH;;AACD,eAAO,EACH,GAAGR,IADA;AAEHR,UAAAA,SAAS,EAAEqB,IAAI,CAACC,GAAL,CAASH,OAAO,GAAGJ,UAAnB,EAA+BK,GAA/B;AAFR,SAAP;AAIH,OAVY;AADH,KAAd;;AAaA,QAAIJ,IAAI,GAAGjB,IAAI,CAACwB,MAAhB,EAAwB;AACpB,WAAKb,KAAL,GAAaC,UAAU,CAAC,MAAM,KAAKC,QAAL,CAAc,CAAd,CAAP,EAAyB,EAAzB,CAAvB;AACH;AACJ;;AAEDY,EAAAA,MAAM,GAAG;AACL,UAAM;AAAElB,MAAAA;AAAF,QAAkB,KAAKD,KAA7B;AACA,wBACI;AAAA,gBACKC,WAAW,CAACC,GAAZ,CAAgB,CAAC;AAAEP,QAAAA;AAAF,OAAD,kBAEb,QAAC,gBAAD;AAAkB,QAAA,IAAI,EAAC,aAAvB;AAAqC,QAAA,SAAS,EAAC,KAA/C;AAAqD,QAAA,KAAK,EAAEA;AAA5D;AAAA;AAAA;AAAA;AAAA,cAFH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAnDgC;;AAsDrC,eAAeC,MAAf","sourcesContent":["import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst data = [\n    {\n        completed: \"100\",\n    }\n];\n\nclass Rating extends React.Component {\n    state = {\n        playersData: [],\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            playersData: data.map(item => ({ ...item, completed: 0 }))\n        };\n    };\n\n    componentDidMount() {\n        this.timer = setTimeout(() => this.progress(1), 10);\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.timer);\n    }\n\n    progress(completion) {\n        let done = 0;\n        this.setState({\n            playersData: data.map((item, i) => {\n                const { completed: current } = this.state.playersData[i];\n                const { completed: max } = item;\n                if (current + completion >= max) {\n                    done += 1;\n                }\n                return {\n                    ...item,\n                    completed: Math.min(current + completion, max),\n                };\n            }),\n        });\n        if (done < data.length) {\n            this.timer = setTimeout(() => this.progress(1), 10);\n        }\n    }\n\n    render() {\n        const { playersData } = this.state;\n        return (\n            <div>\n                {playersData.map(({ completed }) =>\n\n                    <CircularProgress mode=\"determinate\" thickness=\"6px\" value={completed} />\n\n                )}\n            </div>\n        );\n    }\n}\n\nexport default Rating;"]},"metadata":{},"sourceType":"module"}