{"ast":null,"code":"var _jsxFileName = \"/home/richard/Development/reactjs/beta-shoppies/src/components/MovieItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport NA from '../assets/funny.jpg';\nimport omdb from '../api/omdb';\nimport Button from '@material-ui/core/Button';\nimport InfoIcon from '@material-ui/icons/Info';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  heading: {\n    flexBasis: '33.33%',\n    flexShrink: 0\n  },\n  secondaryHeading: {\n    // fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary\n  }\n}));\n\nconst MovieItem = ({\n  movie,\n  onNominate,\n  nominations,\n  panelIndex,\n  expanded,\n  handleChange\n}) => {\n  _s();\n\n  const movieId = movie.imdbID;\n  const [title, setTitle] = useState('');\n  const [plot, setPlot] = useState('');\n  const [releasedYear, setReleasedYear] = useState('');\n  const [actors, setActors] = useState('');\n  const [awards, setAwards] = useState('');\n  const [boxOffice, setBoxOffice] = useState('');\n  const [country, setCountry] = useState('');\n  const [director, setDirector] = useState('');\n  const [genre, setGenre] = useState('');\n  const [metascore, setMetascore] = useState('');\n  const [runtime, setRuntime] = useState('');\n  const [writer, setWriter] = useState('');\n  const [releasedDate, setReleasedDate] = useState('');\n  const [imdbRating, setImdbRating] = useState('');\n  const [rottenTomatoesRating, setRottenTomatoesRating] = useState(''); // from Movielist\n\n  const classes = useStyles();\n  useEffect(async () => {\n    const response = await omdb.get('', {\n      params: {\n        i: movieId\n      }\n    });\n    const results = response.data;\n    setTitle(results.Title);\n    setReleasedYear(results.Year);\n    setPlot(results.Plot);\n  }, []); // Extract more detailed information of the movie\n\n  const onClick = async () => {\n    const response = await omdb.get('', {\n      params: {\n        i: movieId\n      }\n    });\n    setTitle(response.data.Title);\n    setActors(response.data.Actors);\n    setAwards(response.data.Awards);\n    setBoxOffice(response.data.BoxOffice);\n    setCountry(response.data.Country);\n    setDirector(response.data.Director);\n    setGenre(response.data.Genre);\n    setMetascore(response.data.Metascore);\n    setPlot(response.data.Plot);\n    setRuntime(response.data.Runtime);\n    setWriter(response.data.Writer);\n    setReleasedDate(response.data.Released); // setImdbRating(response.data.Ratings[0].Value);\n    // setRottenTomatoesRating(response.data.Ratings[1].Value);\n\n    console.log(\"Detail response:\");\n    console.log(response);\n  };\n\n  const onNominateMovie = nominatedMovie => {\n    // Verifies if the nomination has already been nominated\n    console.log(\"Current nominations: \");\n    console.log(nominations);\n\n    if (nominations.includes(nominatedMovie)) {\n      console.log(\"Already nominated!\");\n    } else if (nominations.length < 5) {\n      console.log(\"New nomination\");\n      onNominate(nominatedMovie);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Accordion, {\n    expanded: expanded === `panel${panelIndex}`,\n    onChange: handleChange(`panel${panelIndex}`),\n    children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n      expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }, this),\n      \"aria-controls\": `panel${panelIndex}bh-content`,\n      id: `panel${panelIndex}bh-header`,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          alignItems: \"center\",\n          sm: \"3\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: movie.Title,\n            src: movie.Poster === \"N/A\" ? NA : movie.Poster\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            endIcon: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 38\n            }, this),\n            size: \"small\",\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: () => onNominateMovie(movie),\n            children: \"Nominate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          sm: \"9\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.secondaryHeading,\n            children: releasedYear\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: plot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      variant: \"middle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Actors: \", actors]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Awards: \", awards]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Box Office: \", boxOffice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Country: \", country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Director: \", director]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Genre: \", genre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Metascore: \", metascore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Plot: \", plot]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Runtime: \", runtime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Writer: \", writer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Date of Release: \", releasedDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"IMDb Rating: \", imdbRating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Rotten Tomatoes Rating: \", rottenTomatoesRating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieItem, \"uyYFqRftC9HO6UKmyoF2UKTSomg=\", false, function () {\n  return [useStyles];\n});\n\n_c = MovieItem;\nexport default MovieItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieItem\");","map":{"version":3,"sources":["/home/richard/Development/reactjs/beta-shoppies/src/components/MovieItem.js"],"names":["React","useState","useEffect","NA","omdb","Button","InfoIcon","FavoriteIcon","makeStyles","Accordion","AccordionDetails","AccordionSummary","Typography","ExpandMoreIcon","Divider","Grid","Box","useStyles","theme","root","width","heading","flexBasis","flexShrink","secondaryHeading","color","palette","text","secondary","MovieItem","movie","onNominate","nominations","panelIndex","expanded","handleChange","movieId","imdbID","title","setTitle","plot","setPlot","releasedYear","setReleasedYear","actors","setActors","awards","setAwards","boxOffice","setBoxOffice","country","setCountry","director","setDirector","genre","setGenre","metascore","setMetascore","runtime","setRuntime","writer","setWriter","releasedDate","setReleasedDate","imdbRating","setImdbRating","rottenTomatoesRating","setRottenTomatoesRating","classes","response","get","params","i","results","data","Title","Year","Plot","onClick","Actors","Awards","BoxOffice","Country","Director","Genre","Metascore","Runtime","Writer","Released","console","log","onNominateMovie","nominatedMovie","includes","length","Poster"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport NA from '../assets/funny.jpg';\nimport omdb from '../api/omdb';\nimport Button from '@material-ui/core/Button';\nimport InfoIcon from '@material-ui/icons/Info';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\n\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        // fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary\n    },\n}));\n\nconst MovieItem = ({ movie, onNominate, nominations, panelIndex, expanded, handleChange }) => {\n    const movieId = movie.imdbID;\n    const [title, setTitle] = useState('');\n    const [plot, setPlot] = useState('');\n    const [releasedYear, setReleasedYear] = useState('');\n\n\n    const [actors, setActors] = useState('');\n    const [awards, setAwards] = useState('');\n    const [boxOffice, setBoxOffice] = useState('');\n    const [country, setCountry] = useState('');\n    const [director, setDirector] = useState('');\n    const [genre, setGenre] = useState('');\n    const [metascore, setMetascore] = useState('');\n    const [runtime, setRuntime] = useState('');\n    const [writer, setWriter] = useState('');\n    const [releasedDate, setReleasedDate] = useState('');\n    const [imdbRating, setImdbRating] = useState('');\n    const [rottenTomatoesRating, setRottenTomatoesRating] = useState('');\n\n    // from Movielist\n    const classes = useStyles();\n\n    useEffect(async () => {\n        const response = await omdb.get(\n            '',\n            {\n                params: {\n                    i: movieId\n                }\n            }\n        );\n\n        const results = response.data;\n\n        setTitle(results.Title)\n        setReleasedYear(results.Year);\n        setPlot(results.Plot);\n\n\n\n    }, []);\n\n    // Extract more detailed information of the movie\n    const onClick = async () => {\n        const response = await omdb.get(\n            '',\n            {\n                params: {\n                    i: movieId\n                }\n            }\n        );\n\n        setTitle(response.data.Title);\n        setActors(response.data.Actors);\n        setAwards(response.data.Awards);\n        setBoxOffice(response.data.BoxOffice);\n        setCountry(response.data.Country);\n        setDirector(response.data.Director);\n        setGenre(response.data.Genre);\n        setMetascore(response.data.Metascore);\n        setPlot(response.data.Plot);\n        setRuntime(response.data.Runtime);\n        setWriter(response.data.Writer);\n        setReleasedDate(response.data.Released);\n        // setImdbRating(response.data.Ratings[0].Value);\n        // setRottenTomatoesRating(response.data.Ratings[1].Value);\n\n        console.log(\"Detail response:\");\n        console.log(response);\n    };\n\n\n\n    const onNominateMovie = (nominatedMovie) => {\n        // Verifies if the nomination has already been nominated\n        console.log(\"Current nominations: \");\n        console.log(nominations);\n        if (nominations.includes(nominatedMovie)) {\n            console.log(\"Already nominated!\");\n        } else if (nominations.length < 5) {\n            console.log(\"New nomination\");\n            onNominate(nominatedMovie);\n        }\n    };\n\n    return (\n        <Accordion expanded={expanded === `panel${panelIndex}`} onChange={handleChange(`panel${panelIndex}`)}>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls={`panel${panelIndex}bh-content`}\n                id={`panel${panelIndex}bh-header`}\n            >\n                <Grid container direction=\"row\">\n                    <Grid container direction=\"column\" alignItems=\"center\" sm=\"3\">\n                        <img alt={movie.Title} src={movie.Poster === \"N/A\" ? NA : movie.Poster} />\n                        <Button\n                            endIcon={<FavoriteIcon />}\n                            size=\"small\"\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            onClick={() => onNominateMovie(movie)} >Nominate</Button>\n                        <Button />\n                    </Grid>\n\n                    <Grid sm=\"9\">\n                        <Typography variant=\"h4\">{title}</Typography>\n                        <Typography className={classes.secondaryHeading}>{releasedYear}</Typography>\n                        <Typography>{plot}</Typography>\n                    </Grid>\n                </Grid>\n\n            </AccordionSummary>\n            <Divider variant=\"middle\" />\n            <AccordionDetails>\n                <div>\n                    <Typography>Actors: {actors}</Typography>\n                    <Typography>Awards: {awards}</Typography>\n                    <Typography>Box Office: {boxOffice}</Typography>\n                    <Typography>Country: {country}</Typography>\n                    <Typography>Director: {director}</Typography>\n                    <Typography>Genre: {genre}</Typography>\n                    <Typography>Metascore: {metascore}</Typography>\n                    <Typography>Plot: {plot}</Typography>\n                    <Typography>Runtime: {runtime}</Typography>\n                    <Typography>Writer: {writer}</Typography>\n                    <Typography>Date of Release: {releasedDate}</Typography>\n                    <Typography>IMDb Rating: {imdbRating}</Typography>\n                    <Typography>Rotten Tomatoes Rating: {rottenTomatoesRating}</Typography>\n                </div>\n            </AccordionDetails>\n        </Accordion>\n    );\n};\n\nexport default MovieItem;"]},"metadata":{},"sourceType":"module"}