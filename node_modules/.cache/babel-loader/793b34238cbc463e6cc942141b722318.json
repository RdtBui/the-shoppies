{"ast":null,"code":"var _jsxFileName = \"/home/richard/Development/reactjs/beta-shoppies/src/components/MovieList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // Material UI\n\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide'; // Local imports\n\nimport EmptyTheater from '../assets/empty-theater.png';\nimport MovieItem from './MovieItem';\nimport AlertWarning from './AlertWarning';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: '25px'\n  },\n  secondaryHeading: {\n    color: theme.palette.text.secondary\n  },\n  theaterImg: {\n    margin: '25px 0px',\n    width: '100%'\n  },\n  theaterImgTheater: {\n    padding: '0px 70px'\n  }\n}));\n\nconst MovieList = ({\n  movies,\n  onNominate,\n  nominations,\n  handleLoadMore,\n  resultsAmount\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n  const [openAlert, setOpenAlert] = useState(false); // Handles if a movie detail is expanded or not\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const handleCloseAlert = () => {\n    setOpenAlert(false);\n  };\n\n  const handleOpenAlert = () => {\n    setOpenAlert(true);\n  };\n\n  const renderedList = movies.map(movie => {\n    let index = movies.indexOf(movie) + 1;\n    return /*#__PURE__*/_jsxDEV(MovieItem, {\n      panelIndex: index,\n      movie: movie,\n      onNominate: onNominate,\n      nominations: nominations,\n      expanded: expanded,\n      handleChange: handleChange,\n      handleAlert: handleOpenAlert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }); // Returns a card with image indicating that the search hasn't been initiated yet\n\n  const moviePlaceholder = () => {\n    return /*#__PURE__*/_jsxDEV(Slide, {\n      direction: \"up\",\n      in: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              style: {\n                marginTop: '20px'\n              },\n              children: \"Uh oh... it seems to be empty in here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.secondaryHeading,\n              children: \"Search and add movies to your list\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            className: classes.theaterImgContainer,\n            item: true,\n            xs: 12,\n            justify: \"center\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"Empty theater seats\",\n              className: classes.theaterImg,\n              src: EmptyTheater\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderedList.length === 0 ? moviePlaceholder() : renderedList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), movies.length === 0 || movies.length >= resultsAmount ? '' : /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        width: '100%',\n        margin: '20px 0px',\n        textTransform: 'none',\n        color: '#428bca',\n        borderColor: '#428bca'\n      },\n      variant: \"outlined\",\n      onClick: handleLoadMore,\n      children: \"More Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AlertWarning, {\n        content: \"Your nomination list is full!\",\n        handleOpen: openAlert,\n        handleClose: handleCloseAlert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieList, \"+IN6eCQ12fkzCBSJonEbJQ7Ma7Q=\", false, function () {\n  return [useStyles];\n});\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["/home/richard/Development/reactjs/beta-shoppies/src/components/MovieList.js"],"names":["React","useState","Button","Card","Grid","makeStyles","Typography","Slide","EmptyTheater","MovieItem","AlertWarning","useStyles","theme","root","width","marginTop","secondaryHeading","color","palette","text","secondary","theaterImg","margin","theaterImgTheater","padding","MovieList","movies","onNominate","nominations","handleLoadMore","resultsAmount","classes","expanded","setExpanded","openAlert","setOpenAlert","handleChange","panel","event","isExpanded","handleCloseAlert","handleOpenAlert","renderedList","map","movie","index","indexOf","moviePlaceholder","theaterImgContainer","length","textTransform","borderColor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\n// Material UI\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\n\n// Local imports\nimport EmptyTheater from '../assets/empty-theater.png';\nimport MovieItem from './MovieItem';\nimport AlertWarning from './AlertWarning';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        marginTop: '25px',\n    },\n    secondaryHeading: {\n        color: theme.palette.text.secondary,\n    },\n    theaterImg: {\n        margin: '25px 0px',\n        width: '100%',\n    },\n    theaterImgTheater: {\n        padding: '0px 70px',\n    },\n}));\n\nconst MovieList = ({\n    movies,\n    onNominate,\n    nominations,\n    handleLoadMore,\n    resultsAmount,\n}) => {\n    const classes = useStyles();\n    const [expanded, setExpanded] = useState(false);\n    const [openAlert, setOpenAlert] = useState(false);\n\n    // Handles if a movie detail is expanded or not\n    const handleChange = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const handleCloseAlert = () => {\n        setOpenAlert(false);\n    };\n\n    const handleOpenAlert = () => {\n        setOpenAlert(true);\n    };\n\n    const renderedList = movies.map(movie => {\n        let index = movies.indexOf(movie) + 1;\n        return (\n            <MovieItem\n                panelIndex={index}\n                movie={movie}\n                onNominate={onNominate}\n                nominations={nominations}\n                expanded={expanded}\n                handleChange={handleChange}\n                handleAlert={handleOpenAlert}\n            />\n        );\n    });\n\n    // Returns a card with image indicating that the search hasn't been initiated yet\n    const moviePlaceholder = () => {\n        return (\n            <Slide direction='up' in={true} mountOnEnter unmountOnExit>\n                <Card>\n                    <Grid container direction='column' alignItems='center'>\n                        <Grid item xs={12}>\n                            <Typography\n                                variant='h5'\n                                style={{ marginTop: '20px' }}\n                            >\n                                Uh oh... it seems to be empty in here\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography className={classes.secondaryHeading}>\n                                Search and add movies to your list\n                            </Typography>\n                        </Grid>\n                        <Grid\n                            className={classes.theaterImgContainer}\n                            item\n                            xs={12}\n                            justify='center'\n                        >\n                            <img\n                                alt='Empty theater seats'\n                                className={classes.theaterImg}\n                                src={EmptyTheater}\n                            />\n                        </Grid>\n                    </Grid>\n                </Card>\n            </Slide>\n        );\n    };\n\n    return (\n        <div className={classes.root}>\n            <div>\n                {renderedList.length === 0 ? moviePlaceholder() : renderedList}\n            </div>\n            {movies.length === 0 || movies.length >= resultsAmount ? (\n                ''\n            ) : (\n                <Button\n                    style={{\n                        width: '100%',\n                        margin: '20px 0px',\n                        textTransform: 'none',\n                        color: '#428bca',\n                        borderColor: '#428bca',\n                    }}\n                    variant='outlined'\n                    onClick={handleLoadMore}\n                >\n                    More Results\n                </Button>\n            )}\n            <div>\n                <AlertWarning\n                    content='Your nomination list is full!'\n                    handleOpen={openAlert}\n                    handleClose={handleCloseAlert}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}