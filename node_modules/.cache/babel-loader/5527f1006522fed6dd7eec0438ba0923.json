{"ast":null,"code":"var _jsxFileName = \"/home/richard/Development/reactjs/beta-shoppies/src/components/MovieItem.js\",\n    _s = $RefreshSig$();\n\nimport './MovieItem.css';\nimport React, { useState, useEffect } from 'react';\nimport NA from '../assets/funny.jpg';\nimport omdb from '../api/omdb';\nimport Button from '@material-ui/core/Button';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport MovieDetails from './MovieDetails';\nimport InfoTwoToneIcon from '@material-ui/icons/InfoTwoTone';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertWarning from './AlertWarning';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  secondaryHeading: {\n    color: theme.palette.text.secondary\n  },\n  nominateButtonMargin: {\n    margin: '15px 0px'\n  },\n  button: {\n    textTransform: \"none\",\n    borderRadius: \"18px\",\n    padding: \"7px 20px\"\n  },\n  awardsContainer: {\n    borderColor: \"green\",\n    marginTop: '15px',\n    padding: '8px 10px',\n    backgroundColor: \"salmon\"\n  },\n  infoIcon: {\n    color: \"orange\",\n    marginRight: \"10px\"\n  }\n}));\n\nconst MovieItem = ({\n  movie,\n  onNominate,\n  nominations,\n  panelIndex,\n  expanded,\n  handleChange,\n  handleAlert\n}) => {\n  _s();\n\n  const movieId = movie.imdbID;\n  const [title, setTitle] = useState('');\n  const [awards, setAwards] = useState('');\n  const [runtime, setRuntime] = useState('');\n  const [releasedYear, setReleasedYear] = useState('');\n  const [country, setCountry] = useState('');\n  const [isDisable, setIsDisable] = useState(false);\n  const classes = useStyles();\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await omdb.get('', {\n        params: {\n          i: movieId,\n          plot: \"full\"\n        }\n      });\n      const results = response.data;\n      setTitle(results.Title);\n      setAwards(results.Awards);\n      setRuntime(results.Runtime);\n      setReleasedYear(results.Year);\n      setCountry(results.Country);\n    };\n\n    fetchData();\n  }); // Disable and enable button according to nomination\n\n  useEffect(() => {\n    if (nominations.includes(movie)) {\n      setIsDisable(true);\n    } else {\n      setIsDisable(false);\n    }\n  }); // Extract more detailed information of the movie when more info is needed\n\n  const onNominateMovie = nominatedMovie => {\n    // Verifies if the nomination has already been nominated\n    console.log(\"Current nominations: \");\n    console.log(nominations);\n\n    if (nominations.includes(nominatedMovie)) {\n      console.log(\"Already nominated!\");\n    } else if (nominations.length < 5) {\n      setIsDisable(true);\n      console.log(\"New nomination\");\n      onNominate(nominatedMovie);\n    } else if (nominations.length === 5) {\n      console.log(\"Nomination list full\"); // setOpenAlert(true);\n\n      handleAlert();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Accordion, {\n    expanded: expanded === `panel${panelIndex}`,\n    onChange: handleChange(`panel${panelIndex}`),\n    children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n      expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }, this),\n      \"aria-controls\": `panel${panelIndex}bh-content`,\n      id: `panel${panelIndex}bh-header`,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"movie-poster\",\n            alt: movie.Title,\n            src: movie.Poster === \"N/A\" ? NA : movie.Poster\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          alignItems: \"flex-start\",\n          sm: \"9\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.secondaryHeading,\n              children: [releasedYear, \" (\", country, \")  |  \", runtime, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this), awards === 'N/A' ? '' : /*#__PURE__*/_jsxDEV(Box, {\n              className: classes.awardsContainer,\n              borderBottom: 3,\n              display: \"flex\",\n              children: [/*#__PURE__*/_jsxDEV(InfoTwoToneIcon, {\n                className: classes.infoIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: awards\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box // Prevents the nominate button from opening the detail sheet\n            , {\n              onClick: event => event.stopPropagation(),\n              onFocus: event => event.stopPropagation(),\n              flexDirection: \"column\",\n              display: \"flex\",\n              alignItems: \"center\",\n              className: classes.nominateButtonMargin,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  cursor: 'not-allowed'\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: classes.button,\n                  endIcon: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 50\n                  }, this),\n                  disabled: isDisable,\n                  size: \"small\",\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: () => onNominateMovie(movie),\n                  children: \"Nominate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      variant: \"middle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n      children: /*#__PURE__*/_jsxDEV(MovieDetails, {\n        movieId: movieId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieItem, \"KpeGTAnQdU8N3IRnMkrXxF0OE90=\", false, function () {\n  return [useStyles];\n});\n\n_c = MovieItem;\nexport default MovieItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieItem\");","map":{"version":3,"sources":["/home/richard/Development/reactjs/beta-shoppies/src/components/MovieItem.js"],"names":["React","useState","useEffect","NA","omdb","Button","AddCircleOutlineIcon","makeStyles","Accordion","AccordionDetails","AccordionSummary","Typography","ExpandMoreIcon","Divider","Grid","Box","MovieDetails","InfoTwoToneIcon","Alert","AlertWarning","useStyles","theme","secondaryHeading","color","palette","text","secondary","nominateButtonMargin","margin","button","textTransform","borderRadius","padding","awardsContainer","borderColor","marginTop","backgroundColor","infoIcon","marginRight","MovieItem","movie","onNominate","nominations","panelIndex","expanded","handleChange","handleAlert","movieId","imdbID","title","setTitle","awards","setAwards","runtime","setRuntime","releasedYear","setReleasedYear","country","setCountry","isDisable","setIsDisable","classes","fetchData","response","get","params","i","plot","results","data","Title","Awards","Runtime","Year","Country","includes","onNominateMovie","nominatedMovie","console","log","length","Poster","event","stopPropagation","cursor"],"mappings":"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","sourcesContent":["import './MovieItem.css';\nimport React, { useState, useEffect } from 'react';\nimport NA from '../assets/funny.jpg';\nimport omdb from '../api/omdb';\nimport Button from '@material-ui/core/Button';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport MovieDetails from './MovieDetails'\nimport InfoTwoToneIcon from '@material-ui/icons/InfoTwoTone';\n\nimport Alert from '@material-ui/lab/Alert';\nimport AlertWarning from './AlertWarning';\n\n\nconst useStyles = makeStyles((theme) => ({\n    secondaryHeading: {\n        color: theme.palette.text.secondary\n    },\n    nominateButtonMargin: {\n        margin: '15px 0px',\n    },\n    button: {\n        textTransform: \"none\",\n        borderRadius: \"18px\",\n        padding: \"7px 20px\",\n    },\n    awardsContainer: {\n        borderColor: \"green\",\n        marginTop: '15px',\n        padding: '8px 10px',\n        backgroundColor: \"salmon\",\n    },\n    infoIcon: {\n        color: \"orange\",\n        marginRight: \"10px\",\n    },\n}));\n\nconst MovieItem = ({ movie, onNominate, nominations, panelIndex, expanded, handleChange, handleAlert }) => {\n\n    const movieId = movie.imdbID;\n    const [title, setTitle] = useState('');\n    const [awards, setAwards] = useState('');\n    const [runtime, setRuntime] = useState('');\n    const [releasedYear, setReleasedYear] = useState('');\n    const [country, setCountry] = useState('');\n    const [isDisable, setIsDisable] = useState(false);\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const response = await omdb.get(\n                '',\n                {\n                    params: {\n                        i: movieId,\n                        plot: \"full\"\n                    }\n                }\n            );\n\n            const results = response.data;\n            setTitle(results.Title);\n            setAwards(results.Awards);\n            setRuntime(results.Runtime);\n            setReleasedYear(results.Year);\n            setCountry(results.Country);\n        };\n        fetchData();\n    });\n\n    // Disable and enable button according to nomination\n    useEffect(() => {\n        if (nominations.includes(movie)) {\n            setIsDisable(true);\n        } else {\n            setIsDisable(false);\n        }\n    });\n\n    // Extract more detailed information of the movie when more info is needed\n    const onNominateMovie = (nominatedMovie) => {\n        // Verifies if the nomination has already been nominated\n        console.log(\"Current nominations: \");\n        console.log(nominations);\n        if (nominations.includes(nominatedMovie)) {\n            console.log(\"Already nominated!\");\n        } else if (nominations.length < 5) {\n            setIsDisable(true);\n            console.log(\"New nomination\");\n            onNominate(nominatedMovie);\n        } else if (nominations.length === 5) {\n            console.log(\"Nomination list full\");\n            // setOpenAlert(true);\n            handleAlert();\n        }\n    };\n\n    return (\n        <Accordion expanded={expanded === `panel${panelIndex}`} onChange={handleChange(`panel${panelIndex}`)}>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls={`panel${panelIndex}bh-content`}\n                id={`panel${panelIndex}bh-header`}\n            >\n                <Grid container direction=\"row\">\n                    <Grid item sm=\"3\">\n                        <img id=\"movie-poster\" alt={movie.Title} src={movie.Poster === \"N/A\" ? NA : movie.Poster} />\n                    </Grid>\n\n                    <Grid alignItems=\"flex-start\" sm=\"9\">\n                        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n                            <Typography variant=\"h5\">{title}</Typography>\n                            <Typography className={classes.secondaryHeading}>{releasedYear} ({country})  |  {runtime} </Typography>\n                            {awards === 'N/A' ? '' :\n                                <Box className={classes.awardsContainer} borderBottom={3} display=\"flex\" >\n                                    <InfoTwoToneIcon className={classes.infoIcon} />\n                                    <Typography>{awards}</Typography>\n                                </Box>\n                            }\n                            <Box\n                                // Prevents the nominate button from opening the detail sheet\n                                onClick={(event) => event.stopPropagation()}\n                                onFocus={(event) => event.stopPropagation()}\n                                flexDirection=\"column\"\n                                display=\"flex\"\n                                alignItems=\"center\"\n                                className={classes.nominateButtonMargin}\n                            >\n                                <span style={{ cursor: 'not-allowed' }}>\n                                    <Button\n                                        className={classes.button}\n                                        endIcon={<AddCircleOutlineIcon />}\n                                        disabled={isDisable}\n                                        size=\"small\"\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={() => onNominateMovie(movie)}>\n                                        Nominate\n                                        </Button>\n                                </span>\n                            </Box>\n                        </Box>\n                    </Grid>\n                </Grid>\n            </AccordionSummary>\n            <Divider variant=\"middle\" />\n            <AccordionDetails>\n                <MovieDetails movieId={movieId} />\n            </AccordionDetails>\n        </Accordion>\n    );\n};\n\nexport default MovieItem;"]},"metadata":{},"sourceType":"module"}