{"ast":null,"code":"var _jsxFileName = \"/home/richard/Development/reactjs/beta-shoppies/src/components/MovieList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MovieItem from './MovieItem';\nimport Collapse from '@material-ui/core/Collapse';\nimport Alert from '@material-ui/lab/Alert';\nimport Paper from '@material-ui/core/Paper';\nimport AlertWarning from './AlertWarning';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: '25px'\n  }\n}));\n\nconst MovieList = ({\n  movies,\n  onNominate,\n  nominations,\n  searchError\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const [openAlert, setOpenAlert] = React.useState(false);\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const handleAlert = () => {\n    setOpenAlert(true);\n  };\n\n  const renderedList = movies.map(movie => {\n    let index = movies.indexOf(movie) + 1;\n    return /*#__PURE__*/_jsxDEV(MovieItem, {\n      panelIndex: index,\n      movie: movie,\n      onNominate: onNominate,\n      nominations: nominations,\n      expanded: expanded,\n      handleChange: handleChange,\n      handleAlert: handleAlert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  });\n\n  if (searchError === \"Too many results.\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Collapse, {\n        in: true,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"warning\",\n            children: \"Please be more precise!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), renderedList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  } else if (searchError === \"Movie not found!\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Collapse, {\n        in: true,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"warning\",\n            children: \"Try to check your spelling.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), renderedList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenAlert(false);\n  }; // const onNominateMovie = (nominatedMovie) => {\n  //     // Verifies if the nomination has already been nominated\n  //     console.log(\"Current nominations: \");\n  //     console.log(nominations);\n  //     if (nominations.includes(nominatedMovie)) {\n  //         console.log(\"Already nominated!\");\n  //     } else if (nominations.length < 5) {\n  //         setIsDisable(true);\n  //         console.log(\"New nomination\");\n  //         onNominate(nominatedMovie);\n  //     } else if (nominations.length === 5) {\n  //         console.log(\"Nomination list full\");\n  //         setOpenAlert(true);\n  //     }\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [renderedList, /*#__PURE__*/_jsxDEV(AlertWarning, {\n      handleOpen: openAlert,\n      handleClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieList, \"+IN6eCQ12fkzCBSJonEbJQ7Ma7Q=\", false, function () {\n  return [useStyles];\n});\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["/home/richard/Development/reactjs/beta-shoppies/src/components/MovieList.js"],"names":["React","useEffect","makeStyles","MovieItem","Collapse","Alert","Paper","AlertWarning","useStyles","theme","root","width","marginTop","MovieList","movies","onNominate","nominations","searchError","classes","expanded","setExpanded","useState","openAlert","setOpenAlert","handleChange","panel","event","isExpanded","handleAlert","renderedList","map","movie","index","indexOf","handleClose","reason"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MovieItem from './MovieItem';\nimport Collapse from '@material-ui/core/Collapse';\nimport Alert from '@material-ui/lab/Alert';\nimport Paper from '@material-ui/core/Paper';\nimport AlertWarning from './AlertWarning';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        marginTop: '25px',\n    }\n}));\n\nconst MovieList = ({ movies, onNominate, nominations, searchError }) => {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n    const [openAlert, setOpenAlert] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const handleAlert = () => {\n        setOpenAlert(true);\n    };\n\n    const renderedList = movies.map((movie) => {\n        let index = movies.indexOf(movie) + 1;\n        return (\n            <MovieItem panelIndex={index} movie={movie} onNominate={onNominate} nominations={nominations} expanded={expanded} handleChange={handleChange} handleAlert={handleAlert} />\n        );\n    });\n\n    if (searchError === \"Too many results.\") {\n        return (\n            <div>\n                <Collapse in={true} >\n                    <Paper>\n                        <Alert severity=\"warning\">Please be more precise!</Alert>\n                    </Paper>\n                </Collapse>\n                {renderedList}\n            </div>\n        );\n    } else if (searchError === \"Movie not found!\") {\n        return (\n            <div>\n                <Collapse in={true} >\n                    <Paper>\n                        <Alert severity=\"warning\">Try to check your spelling.</Alert>\n                    </Paper>\n                </Collapse>\n                {renderedList}\n            </div>\n        );\n    }\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpenAlert(false);\n    };\n\n\n\n    // const onNominateMovie = (nominatedMovie) => {\n    //     // Verifies if the nomination has already been nominated\n    //     console.log(\"Current nominations: \");\n    //     console.log(nominations);\n    //     if (nominations.includes(nominatedMovie)) {\n    //         console.log(\"Already nominated!\");\n    //     } else if (nominations.length < 5) {\n    //         setIsDisable(true);\n    //         console.log(\"New nomination\");\n    //         onNominate(nominatedMovie);\n    //     } else if (nominations.length === 5) {\n    //         console.log(\"Nomination list full\");\n    //         setOpenAlert(true);\n    //     }\n    // };\n\n\n\n\n    return (\n        <div className={classes.root}>\n            {renderedList}\n            <AlertWarning handleOpen={openAlert} handleClose={handleClose} />\n        </div>\n    );\n}\n\nexport default MovieList;"]},"metadata":{},"sourceType":"module"}