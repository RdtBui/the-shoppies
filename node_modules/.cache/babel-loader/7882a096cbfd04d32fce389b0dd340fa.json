{"ast":null,"code":"var _jsxFileName = \"/home/richard/Development/reactjs/beta-shoppies/src/components/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport './Data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst filter = createFilterOptions();\n\nconst SearchBar = ({\n  onTermSubmit\n}) => {\n  _s();\n\n  const [value, setValue] = React.useState(null);\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    onTermSubmit(value.title);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    value: value,\n    onChange: (event, newValue) => {\n      if (typeof newValue === 'string') {\n        setValue({\n          title: newValue\n        });\n      } else if (newValue && newValue.inputValue) {\n        // Create a new value from the user input\n        setValue({\n          title: newValue.inputValue\n        });\n      } else {\n        setValue(newValue);\n      }\n    },\n    filterOptions: (options, params) => {\n      const filtered = filter(options, params); // Suggest the creation of a new value\n\n      if (params.inputValue !== '') {\n        filtered.push({\n          inputValue: params.inputValue,\n          title: `Add \"${params.inputValue}\"`\n        });\n      }\n\n      return filtered;\n    },\n    selectOnFocus: true,\n    clearOnBlur: true,\n    handleHomeEndKeys: true,\n    id: \"free-solo-with-text-demo\",\n    options: top100Films,\n    getOptionLabel: option => {\n      // Value selected with enter, right from the input\n      if (typeof option === 'string') {\n        return option;\n      } // Add \"xxx\" option created dynamically\n\n\n      if (option.inputValue) {\n        return option.inputValue;\n      } // Regular option\n\n\n      return option.title;\n    },\n    renderOption: option => option.title,\n    style: {\n      width: 300\n    },\n    freeSolo: true,\n    renderInput: params => /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onFormSubmit,\n      children: /*#__PURE__*/_jsxDEV(TextField, { ...params,\n        label: \"Search\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBar, \"EEjdpY/CSe7/lDQurV9yi1RbKSs=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/home/richard/Development/reactjs/beta-shoppies/src/components/SearchBar.js"],"names":["React","useState","SearchIcon","TextField","Autocomplete","createFilterOptions","filter","SearchBar","onTermSubmit","value","setValue","onFormSubmit","event","preventDefault","title","newValue","inputValue","options","params","filtered","push","top100Films","option","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,IAAuBC,mBAAvB,QAAkD,+BAAlD;AAEA,OAAO,QAAP;;AAEA,MAAMC,MAAM,GAAGD,mBAAmB,EAAlC;;AAEA,MAAME,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAAA;;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,KAAK,CAACC,QAAN,CAAe,IAAf,CAA1B;;AAEA,QAAMU,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AAEAL,IAAAA,YAAY,CAACC,KAAK,CAACK,KAAP,CAAZ;AACH,GAJD;;AAMA,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAEL,KADX;AAEI,IAAA,QAAQ,EAAE,CAACG,KAAD,EAAQG,QAAR,KAAqB;AAC3B,UAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAC9BL,QAAAA,QAAQ,CAAC;AACLI,UAAAA,KAAK,EAAEC;AADF,SAAD,CAAR;AAGH,OAJD,MAIO,IAAIA,QAAQ,IAAIA,QAAQ,CAACC,UAAzB,EAAqC;AACxC;AACAN,QAAAA,QAAQ,CAAC;AACLI,UAAAA,KAAK,EAAEC,QAAQ,CAACC;AADX,SAAD,CAAR;AAGH,OALM,MAKA;AACHN,QAAAA,QAAQ,CAACK,QAAD,CAAR;AACH;AACJ,KAfL;AAgBI,IAAA,aAAa,EAAE,CAACE,OAAD,EAAUC,MAAV,KAAqB;AAChC,YAAMC,QAAQ,GAAGb,MAAM,CAACW,OAAD,EAAUC,MAAV,CAAvB,CADgC,CAGhC;;AACA,UAAIA,MAAM,CAACF,UAAP,KAAsB,EAA1B,EAA8B;AAC1BG,QAAAA,QAAQ,CAACC,IAAT,CAAc;AACVJ,UAAAA,UAAU,EAAEE,MAAM,CAACF,UADT;AAEVF,UAAAA,KAAK,EAAG,QAAOI,MAAM,CAACF,UAAW;AAFvB,SAAd;AAIH;;AAED,aAAOG,QAAP;AACH,KA5BL;AA6BI,IAAA,aAAa,MA7BjB;AA8BI,IAAA,WAAW,MA9Bf;AA+BI,IAAA,iBAAiB,MA/BrB;AAgCI,IAAA,EAAE,EAAC,0BAhCP;AAiCI,IAAA,OAAO,EAAEE,WAjCb;AAkCI,IAAA,cAAc,EAAGC,MAAD,IAAY;AACxB;AACA,UAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC5B,eAAOA,MAAP;AACH,OAJuB,CAKxB;;;AACA,UAAIA,MAAM,CAACN,UAAX,EAAuB;AACnB,eAAOM,MAAM,CAACN,UAAd;AACH,OARuB,CASxB;;;AACA,aAAOM,MAAM,CAACR,KAAd;AACH,KA7CL;AA8CI,IAAA,YAAY,EAAGQ,MAAD,IAAYA,MAAM,CAACR,KA9CrC;AA+CI,IAAA,KAAK,EAAE;AAAES,MAAAA,KAAK,EAAE;AAAT,KA/CX;AAgDI,IAAA,QAAQ,MAhDZ;AAiDI,IAAA,WAAW,EAAGL,MAAD,iBACT;AAAM,MAAA,QAAQ,EAAEP,YAAhB;AAAA,6BACI,QAAC,SAAD,OAAeO,MAAf;AAAuB,QAAA,KAAK,EAAC,QAA7B;AAAsC,QAAA,OAAO,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAlDR;AAAA;AAAA;AAAA;AAAA,UADJ;AAyDH,CAlED;;GAAMX,S;;KAAAA,S;AAoEN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\n\nimport './Data';\n\nconst filter = createFilterOptions();\n\nconst SearchBar = ({ onTermSubmit }) => {\n    const [value, setValue] = React.useState(null);\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n\n        onTermSubmit(value.title);\n    };\n\n    return (\n        <Autocomplete\n            value={value}\n            onChange={(event, newValue) => {\n                if (typeof newValue === 'string') {\n                    setValue({\n                        title: newValue,\n                    });\n                } else if (newValue && newValue.inputValue) {\n                    // Create a new value from the user input\n                    setValue({\n                        title: newValue.inputValue,\n                    });\n                } else {\n                    setValue(newValue);\n                }\n            }}\n            filterOptions={(options, params) => {\n                const filtered = filter(options, params);\n\n                // Suggest the creation of a new value\n                if (params.inputValue !== '') {\n                    filtered.push({\n                        inputValue: params.inputValue,\n                        title: `Add \"${params.inputValue}\"`,\n                    });\n                }\n\n                return filtered;\n            }}\n            selectOnFocus\n            clearOnBlur\n            handleHomeEndKeys\n            id=\"free-solo-with-text-demo\"\n            options={top100Films}\n            getOptionLabel={(option) => {\n                // Value selected with enter, right from the input\n                if (typeof option === 'string') {\n                    return option;\n                }\n                // Add \"xxx\" option created dynamically\n                if (option.inputValue) {\n                    return option.inputValue;\n                }\n                // Regular option\n                return option.title;\n            }}\n            renderOption={(option) => option.title}\n            style={{ width: 300 }}\n            freeSolo\n            renderInput={(params) => (\n                <form onSubmit={onFormSubmit}>\n                    <TextField {...params} label=\"Search\" variant=\"outlined\" />\n                </form>\n            )}\n        />\n    );\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}