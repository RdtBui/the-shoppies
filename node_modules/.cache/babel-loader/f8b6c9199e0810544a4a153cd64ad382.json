{"ast":null,"code":"var _jsxFileName = \"/home/richard/Development/reactjs/beta-shoppies/src/components/AlertWarning.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Alert;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\nexport default function CustomizedSnackbars({\n  message,\n  openAlert\n}) {\n  _s();\n\n  const classes = useStyles();\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const [open, setOpen] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: open,\n      autoHideDuration: 6000,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        severity: \"warning\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CustomizedSnackbars, \"TsAExMDA6yuxA58uE+YzDgG8Jdg=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = CustomizedSnackbars;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"CustomizedSnackbars\");","map":{"version":3,"sources":["/home/richard/Development/reactjs/beta-shoppies/src/components/AlertWarning.js"],"names":["React","Snackbar","MuiAlert","makeStyles","Alert","props","useStyles","theme","root","width","marginTop","spacing","CustomizedSnackbars","message","openAlert","classes","handleClose","event","reason","setOpen","open","useState"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,sBAAO,QAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAA,OAA4BA;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;KAFQD,K;AAIT,MAAME,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEF,iBAAa;AACTC,MAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADF;AAFX;AAD+B,CAAZ,CAAD,CAA5B;AAWA,eAAe,SAASC,mBAAT,CAA6B;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAA7B,EAAqD;AAAA;;AAChE,QAAMC,OAAO,GAAGT,SAAS,EAAzB;;AAEA,QAAMU,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AACxB;AACH;;AACDC,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GALD;;AAOA,QAAM,CAACC,IAAD,EAAOD,OAAP,IAAkBnB,KAAK,CAACqB,QAAN,CAAe,KAAf,CAAxB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEN,OAAO,CAACP,IAAxB;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEY,IAAhB;AAAsB,MAAA,gBAAgB,EAAE,IAAxC;AAA8C,MAAA,OAAO,EAAEJ,WAAvD;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEA,WAAhB;AAA6B,QAAA,QAAQ,EAAC,SAAtC;AAAA,kBACKH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GArBuBD,mB;UACJN,S;;;MADIM,mB","sourcesContent":["import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\n\n\nexport default function CustomizedSnackbars({ message, openAlert }) {\n    const classes = useStyles();\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <div className={classes.root}>\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"warning\">\n                    {message}\n                </Alert>\n            </Snackbar>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}