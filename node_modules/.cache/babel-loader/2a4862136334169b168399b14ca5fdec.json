{"ast":null,"code":"var _jsxFileName = \"/home/richard/Development/reactjs/beta-shoppies/src/components/MovieDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport omdb from '../api/omdb';\nimport youtube from '../api/youtube';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport InfoTwoToneIcon from '@material-ui/icons/InfoTwoTone';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  bold: {\n    fontWeight: 600\n  },\n  detailMargin: {\n    margin: \"10px 15px\"\n  },\n  trailer: {\n    width: \"100%\"\n  },\n  awardsContainer: {\n    borderColor: \"green\",\n    marginTop: '15px',\n    padding: '8px 10px',\n    backgroundColor: \"salmon\",\n    width: \"100%\"\n  }\n});\n\nconst MovieDetails = ({\n  movieId,\n  expanded\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [actors, setActors] = useState('');\n  const [boxOffice, setBoxOffice] = useState('');\n  const [director, setDirector] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [writer, setWriter] = useState('');\n  const [ratings, setRatings] = useState([]);\n  const [plot, setPlot] = useState('');\n  const [title, setTitle] = useState('');\n  const [rated, setRated] = useState('');\n  const [awards, setAwards] = useState('');\n  const [trailerUrl, setTrailerUrl] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await omdb.get('', {\n        params: {\n          i: movieId\n        }\n      });\n      const results = response.data;\n      setGenres(results.Genre);\n      setActors(results.Actors);\n      setBoxOffice(results.BoxOffice);\n      setDirector(results.Director);\n      setWriter(results.Writer);\n      setRatings(results.Ratings);\n      setPlot(results.Plot);\n      setTitle(results.Title);\n      setRated(results.Rated);\n      setAwards(results.Awards);\n      console.log(\"Detail response:\");\n      console.log(results);\n    };\n\n    fetchData();\n  }, [movieId]); // YouTube API request for trailers, consumes quota\n\n  useEffect(async () => {\n    const searchTerm = title + \" trailer\";\n    console.log(searchTerm);\n    const response = await youtube.get('/search', {\n      params: {\n        q: searchTerm\n      }\n    });\n    const results = response.data;\n    setTrailerUrl(`https://youtube.com/embed/${results.items[0].id.videoId}`);\n  }, [title]);\n  const displayRatings = ratings ? ratings.map(rating => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.bold,\n        children: rating.Source\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: rating.Value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }) : null;\n  const displayTrailer = trailerUrl ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n    title: title + 'Trailer',\n    className: classes.trailer,\n    src: trailerUrl\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this) : null;\n\n  const customCard = (contentText, content) => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      square: true,\n      variant: \"outlined\",\n      style: {\n        padding: \"15px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.bold,\n        children: contentText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    display: \"flex\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      spacing: 5,\n      style: {\n        margin: \"0px -5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: customCard(\"Box Office\", boxOffice)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 8,\n        children: customCard(\"Genres\", genres)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.detailMargin,\n      children: awards === 'N/A' ? '' : /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.awardsContainer,\n          borderBottom: 3,\n          display: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(InfoTwoToneIcon, {\n            className: classes.infoIcon,\n            style: {\n              marginRight: \"7px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: awards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.detailMargin,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          square: true,\n          variant: \"outlined\",\n          style: {\n            padding: \"15px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: displayRatings\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 8,\n        children: displayTrailer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: classes.detailMargin,\n      children: customCard(\"Plot\", plot)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.detailMargin,\n      children: [customCard(\"Director\", director), customCard(\"Writer\", writer), customCard(\"Actors\", actors)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieDetails, \"HziYWbgm6XmXNUrJGPpv8qYvrWw=\", false, function () {\n  return [useStyles];\n});\n\n_c = MovieDetails;\nexport default MovieDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"sources":["/home/richard/Development/reactjs/beta-shoppies/src/components/MovieDetails.js"],"names":["React","useState","useEffect","Typography","omdb","youtube","Grid","Card","InfoTwoToneIcon","makeStyles","Box","useStyles","bold","fontWeight","detailMargin","margin","trailer","width","awardsContainer","borderColor","marginTop","padding","backgroundColor","MovieDetails","movieId","expanded","classes","actors","setActors","boxOffice","setBoxOffice","director","setDirector","genres","setGenres","writer","setWriter","ratings","setRatings","plot","setPlot","title","setTitle","rated","setRated","awards","setAwards","trailerUrl","setTrailerUrl","fetchData","response","get","params","i","results","data","Genre","Actors","BoxOffice","Director","Writer","Ratings","Plot","Title","Rated","Awards","console","log","searchTerm","q","items","id","videoId","displayRatings","map","rating","Source","Value","displayTrailer","customCard","contentText","content","infoIcon","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport omdb from '../api/omdb';\nimport youtube from '../api/youtube';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport InfoTwoToneIcon from '@material-ui/icons/InfoTwoTone';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles({\n    bold: {\n        fontWeight: 600\n    },\n    detailMargin: {\n        margin: \"10px 15px\",\n    },\n    trailer: {\n        width: \"100%\",\n    },\n    awardsContainer: {\n        borderColor: \"green\",\n        marginTop: '15px',\n        padding: '8px 10px',\n        backgroundColor: \"salmon\",\n        width: \"100%\",\n    },\n});\n\nconst MovieDetails = ({ movieId, expanded }) => {\n    const classes = useStyles();\n\n    const [actors, setActors] = useState('');\n    const [boxOffice, setBoxOffice] = useState('');\n    const [director, setDirector] = useState('');\n    const [genres, setGenres] = useState([]);\n    const [writer, setWriter] = useState('');\n    const [ratings, setRatings] = useState([]);\n    const [plot, setPlot] = useState('');\n    const [title, setTitle] = useState('');\n    const [rated, setRated] = useState('');\n    const [awards, setAwards] = useState('');\n    const [trailerUrl, setTrailerUrl] = useState('');\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const response = await omdb.get(\n                '',\n                {\n                    params: {\n                        i: movieId\n                    }\n                }\n            );\n\n            const results = response.data;\n\n            setGenres(results.Genre);\n            setActors(results.Actors);\n            setBoxOffice(results.BoxOffice);\n            setDirector(results.Director);\n            setWriter(results.Writer);\n            setRatings(results.Ratings);\n            setPlot(results.Plot);\n            setTitle(results.Title);\n            setRated(results.Rated);\n            setAwards(results.Awards);\n\n\n            console.log(\"Detail response:\");\n            console.log(results);\n        }\n        fetchData();\n    }, [movieId]);\n\n    // YouTube API request for trailers, consumes quota\n    useEffect(async () => {\n        const searchTerm = title + \" trailer\";\n        console.log(searchTerm);\n        const response = await youtube.get(\n            '/search',\n            {\n                params: {\n                    q: searchTerm\n                }\n            }\n        );\n        const results = response.data;\n        setTrailerUrl(`https://youtube.com/embed/${results.items[0].id.videoId}`);\n    }, [title]);\n\n    const displayRatings = (ratings ? ratings.map((rating) => {\n        return (\n            <div>\n                <Typography className={classes.bold}>\n                    {rating.Source}\n                </Typography>\n                <Typography>\n                    {rating.Value}\n                </Typography>\n            </div>\n        );\n    }) : null);\n\n    const displayTrailer = (trailerUrl ?\n        <iframe title={title + 'Trailer'} className={classes.trailer} src={trailerUrl} />\n        : null);\n\n    const customCard = (contentText, content) => {\n        return (\n            <Card square variant=\"outlined\" style={{ padding: \"15px\" }}>\n                <Typography className={classes.bold}>{contentText}</Typography>\n                <Typography>{content}</Typography>\n            </Card>\n        );\n    };\n\n    return (\n        <Grid container display=\"flex\">\n            <Grid container justify=\"center\" spacing={5} style={{ margin: \"0px -5px\" }}>\n                <Grid item xs={12} sm={6} md={4}>\n                    {customCard(\"Box Office\", boxOffice)}\n                </Grid>\n                <Grid item xs={12} sm={6} md={8}>\n                    {customCard(\"Genres\", genres)}\n                </Grid>\n            </Grid>\n\n            <Grid container className={classes.detailMargin}>\n                {awards === 'N/A' ? '' :\n                    <Grid item container xs={12} >\n                        <Box className={classes.awardsContainer} borderBottom={3} display=\"flex\">\n                            <InfoTwoToneIcon className={classes.infoIcon} style={{ marginRight: \"7px\" }} />\n                            <Typography>{awards}</Typography>\n                        </Box>\n                    </Grid>\n                }\n            </Grid>\n\n            <Grid container className={classes.detailMargin}>\n                <Grid item xs={12} sm={12} md={4}>\n                    <Card square variant=\"outlined\" style={{ padding: \"15px\" }}>\n                        <Typography>{displayRatings}</Typography>\n                    </Card>\n                </Grid>\n                <Grid item xs={12} sm={12} md={8}>\n                    {displayTrailer}\n                    {/* <iframe style={{ backgroundColor: \"pink\", height: \"100%\" }} /> */}\n                </Grid>\n            </Grid>\n\n            <Grid item className={classes.detailMargin}>\n                {customCard(\"Plot\", plot)}\n            </Grid>\n\n            <Grid item xs={12} className={classes.detailMargin}>\n                {customCard(\"Director\", director)}\n                {customCard(\"Writer\", writer)}\n                {customCard(\"Actors\", actors)}\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default MovieDetails;"]},"metadata":{},"sourceType":"module"}