{"ast":null,"code":"var _jsxFileName = \"/home/richard/Development/reactjs/beta-shoppies/src/components/MovieDetails.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieDetails = () => {\n  _s();\n\n  const [actors, setActors] = useState('');\n  const [awards, setAwards] = useState('');\n  const [boxOffice, setBoxOffice] = useState('');\n  const [country, setCountry] = useState('');\n  const [director, setDirector] = useState('');\n  const [genre, setGenre] = useState('');\n  const [metascore, setMetascore] = useState('');\n  const [runtime, setRuntime] = useState('');\n  const [writer, setWriter] = useState('');\n  const [releasedDate, setReleasedDate] = useState('');\n  const [imdbRating, setImdbRating] = useState('');\n  const [rottenTomatoesRating, setRottenTomatoesRating] = useState('');\n\n  const onClick = async () => {\n    const response = await omdb.get('', {\n      params: {\n        i: movieId\n      }\n    });\n    const results = response.data;\n    setActors(results.Actors);\n    setAwards(results.Awards);\n    setBoxOffice(results.BoxOffice);\n    setCountry(results.Country);\n    setDirector(results.Director);\n    setGenre(results.Genre);\n    setMetascore(results.Metascore);\n    setPlot(results.Plot);\n    setRuntime(results.Runtime);\n    setWriter(results.Writer);\n    setReleasedDate(results.Released); // setImdbRating(response.data.Ratings[0].Value);\n    // setRottenTomatoesRating(response.data.Ratings[1].Value);\n\n    console.log(\"Detail response:\");\n    console.log(response);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Actors: \", actors]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Awards: \", awards]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Box Office: \", boxOffice]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Country: \", country]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Director: \", director]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Genre: \", genre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Metascore: \", metascore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Plot: \", plot]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Runtime: \", runtime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Writer: \", writer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Date of Release: \", releasedDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"IMDb Rating: \", imdbRating]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Rotten Tomatoes Rating: \", rottenTomatoesRating]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieDetails, \"1ly9NIgM0LQbGQ+i/6zV1a2x/8U=\");\n\n_c = MovieDetails;\nexport default MovieDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"sources":["/home/richard/Development/reactjs/beta-shoppies/src/components/MovieDetails.js"],"names":["React","MovieDetails","actors","setActors","useState","awards","setAwards","boxOffice","setBoxOffice","country","setCountry","director","setDirector","genre","setGenre","metascore","setMetascore","runtime","setRuntime","writer","setWriter","releasedDate","setReleasedDate","imdbRating","setImdbRating","rottenTomatoesRating","setRottenTomatoesRating","onClick","response","omdb","get","params","i","movieId","results","data","Actors","Awards","BoxOffice","Country","Director","Genre","Metascore","setPlot","Plot","Runtime","Writer","Released","console","log","plot"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst MovieDetails = () => {\n\n    const [actors, setActors] = useState('');\n    const [awards, setAwards] = useState('');\n    const [boxOffice, setBoxOffice] = useState('');\n    const [country, setCountry] = useState('');\n    const [director, setDirector] = useState('');\n    const [genre, setGenre] = useState('');\n    const [metascore, setMetascore] = useState('');\n    const [runtime, setRuntime] = useState('');\n    const [writer, setWriter] = useState('');\n    const [releasedDate, setReleasedDate] = useState('');\n    const [imdbRating, setImdbRating] = useState('');\n    const [rottenTomatoesRating, setRottenTomatoesRating] = useState('');\n\n    const onClick = async () => {\n        const response = await omdb.get(\n            '',\n            {\n                params: {\n                    i: movieId\n                }\n            }\n        );\n\n        const results = response.data;\n\n        setActors(results.Actors);\n        setAwards(results.Awards);\n        setBoxOffice(results.BoxOffice);\n        setCountry(results.Country);\n        setDirector(results.Director);\n        setGenre(results.Genre);\n        setMetascore(results.Metascore);\n        setPlot(results.Plot);\n        setRuntime(results.Runtime);\n        setWriter(results.Writer);\n        setReleasedDate(results.Released);\n        // setImdbRating(response.data.Ratings[0].Value);\n        // setRottenTomatoesRating(response.data.Ratings[1].Value);\n\n        console.log(\"Detail response:\");\n        console.log(response);\n    };\n\n    return (\n        <div>\n            <Typography>Actors: {actors}</Typography>\n            <Typography>Awards: {awards}</Typography>\n            <Typography>Box Office: {boxOffice}</Typography>\n            <Typography>Country: {country}</Typography>\n            <Typography>Director: {director}</Typography>\n            <Typography>Genre: {genre}</Typography>\n            <Typography>Metascore: {metascore}</Typography>\n            <Typography>Plot: {plot}</Typography>\n            <Typography>Runtime: {runtime}</Typography>\n            <Typography>Writer: {writer}</Typography>\n            <Typography>Date of Release: {releasedDate}</Typography>\n            <Typography>IMDb Rating: {imdbRating}</Typography>\n            <Typography>Rotten Tomatoes Rating: {rottenTomatoesRating}</Typography>\n        </div>\n    );\n};\n\nexport default MovieDetails;"]},"metadata":{},"sourceType":"module"}